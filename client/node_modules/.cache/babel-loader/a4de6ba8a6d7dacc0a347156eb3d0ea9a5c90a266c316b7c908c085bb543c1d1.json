{"ast":null,"code":"var _jsxFileName = \"D:\\\\dev\\\\finalproj\\\\react_finalproj\\\\client\\\\src\\\\components\\\\forms\\\\ResumeSequence.jsx\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMicrophone, faArrowLeft, faCheck, faArrowDown } from '@fortawesome/free-solid-svg-icons';\nimport '../../assets/css/resumeSequence.css';\nimport { voiceService } from '../../api/voiceService';\nimport { useVoiceRecording } from '../../hooks/useVoiceRecording';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ResumeSequence = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const navigate = useNavigate();\n  const [currentStep, setCurrentStep] = useState(1);\n  const [formData, setFormData] = useState(() => {\n    // 로컬 스토리지에서 기존 데이터 불러오기\n    const savedData = localStorage.getItem('resumeFormData');\n    return savedData ? JSON.parse(savedData) : {\n      name: '',\n      age: '',\n      phone: '',\n      address: ''\n    };\n  });\n  const [isListening, setIsListening] = useState(false);\n  const [completedSteps, setCompletedSteps] = useState([]);\n  const inputRef = useRef(null);\n  const sectionsRef = useRef([]);\n  const {\n    isRecording,\n    error,\n    startRecording\n  } = useVoiceRecording();\n  const [audioBlob, setAudioBlob] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  // 폼 데이터가 변경될 때마다 로컬 스토리지에 저장\n  useEffect(() => {\n    localStorage.setItem('resumeFormData', JSON.stringify(formData));\n  }, [formData]);\n\n  // 모든 단계가 완료되었는지 확인\n  const isAllCompleted = completedSteps.length === 4;\n\n  // 폼 제출 처리\n  const handleSubmit = async () => {\n    try {\n      // 서버로 데이터 전송\n      const response = await axios.post('http://localhost:8000/api/resume', formData);\n      if (response.data.success) {\n        // 성공 시 로컬 스토리지 클리어\n        localStorage.removeItem('resumeFormData');\n        // 다음 페이지로 이동\n        navigate('/success');\n      }\n    } catch (error) {\n      console.error('폼 제출 중 오류:', error);\n    }\n  };\n\n  // TTS 기능 - 질문하기\n  const speak = async text => {\n    try {\n      console.log('TTS 요청 시작:', text);\n      const audioUrl = await voiceService.textToSpeech(text);\n      const fullUrl = `http://localhost:8000${audioUrl}`;\n\n      // 오디오 재생이 완료될 때까지 대기\n      return new Promise(resolve => {\n        const audio = new Audio(fullUrl);\n        audio.onended = () => resolve(); // 재생 완료 시 Promise 해결\n        audio.play().catch(error => {\n          console.error('오디오 재생 중 오류:', error);\n          resolve(); // 에러 발생해도 진행\n        });\n      });\n    } catch (error) {\n      console.error('TTS 실행 중 오류 발생:', error);\n    }\n  };\n\n  // STT 기능 - 답변 받기\n  const startListening = async field => {\n    if (isProcessing) return;\n    try {\n      setIsProcessing(true);\n      const mediaRecorder = await startRecording();\n      let chunks = [];\n      mediaRecorder.ondataavailable = e => {\n        chunks.push(e.data);\n      };\n      setTimeout(() => {\n        if ((mediaRecorder === null || mediaRecorder === void 0 ? void 0 : mediaRecorder.state) === 'recording') {\n          mediaRecorder.stop();\n        }\n      }, 3000);\n      mediaRecorder.onstop = async () => {\n        try {\n          const blob = new Blob(chunks, {\n            type: 'audio/webm'\n          });\n          const text = await voiceService.speechToText(blob);\n          if (text) {\n            setFormData(prev => {\n              const newData = {\n                ...prev,\n                [field]: text\n              };\n              // 로컬 스토리지 업데이트\n              localStorage.setItem('resumeFormData', JSON.stringify(newData));\n              return newData;\n            });\n            handleConfirm(currentStep);\n          }\n        } catch (error) {\n          console.error('음성 인식 중 오류:', error);\n        } finally {\n          setIsProcessing(false);\n        }\n      };\n    } catch (error) {\n      console.error('음성 녹음 중 오류:', error);\n      setIsProcessing(false);\n    }\n  };\n\n  // 단계 진행 처리\n  const handleConfirm = async step => {\n    if (!completedSteps.includes(step)) {\n      setCompletedSteps(prev => [...prev, step]);\n      setCurrentStep(step + 1);\n\n      // 다음 섹션으로 스크롤\n      setTimeout(() => {\n        const nextSection = sectionsRef.current[step];\n        if (nextSection) {\n          nextSection.scrollIntoView({\n            behavior: 'smooth',\n            block: 'start'\n          });\n        }\n      }, 100);\n\n      // 다음 질문 읽어주기\n      const nextQuestion = getQuestionForStep(step + 1);\n      if (nextQuestion) {\n        await speak(nextQuestion); // 질문이 끝날 때까지 대기\n      }\n    }\n  };\n\n  // 질문 텍스트 가져오기\n  const getQuestionForStep = step => {\n    switch (step) {\n      case 1:\n        return \"이름이 어떻게 되세요?\";\n      case 2:\n        return \"나이가 어떻게 되세요?\";\n      case 3:\n        return \"전화번호가 어떻게 되세요?\";\n      case 4:\n        return \"어디 사세요?\";\n      default:\n        return \"\";\n    }\n  };\n\n  // 나이 선택을 위한 버튼 그룹 컴포넌트\n  const AgeButtonGroup = ({\n    value,\n    onChange,\n    disabled\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hmk-age-buttons\",\n    children: ['50대', '60대', '70대', '80대', '90대 이상'].map(age => /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: `hmk-age-button ${value === age ? 'selected' : ''}`,\n      onClick: () => onChange('age', age),\n      disabled: disabled,\n      children: age\n    }, age, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 9\n  }, this);\n\n  // 각 섹션 컴포넌트\n  const Section = ({\n    step,\n    question,\n    field,\n    value,\n    onChange,\n    onConfirm,\n    isCompleted\n  }) => {\n    _s();\n    const [isEditing, setIsEditing] = useState(false);\n    const handleInputChange = e => {\n      e.preventDefault(); // 이벤트 기본 동작 방지\n      e.stopPropagation(); // 이벤트 전파 방지\n      const newValue = e.target.value;\n      onChange(field, newValue);\n    };\n    const handleUpdate = e => {\n      // handleUpdate 함수 추가\n      e.stopPropagation();\n      setIsEditing(false);\n      onConfirm(step);\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: el => sectionsRef.current[step - 1] = el,\n      className: `hmk-sequence-section ${isCompleted ? 'completed' : ''} ${currentStep === step ? 'active' : ''}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hmk-sequence-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"hmk-sequence-question\",\n          children: question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this), step === 2 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hmk-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(AgeButtonGroup, {\n            value: value,\n            onChange: onChange,\n            disabled: isCompleted && !isEditing\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 29\n          }, this), (!isCompleted || isEditing) && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"hmk-confirm-button\",\n            onClick: isEditing ? handleUpdate : () => onConfirm(step),\n            disabled: !value,\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: isEditing ? faCheck : faArrowDown\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hmk-input-container\",\n          onClick: e => e.stopPropagation(),\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: field === 'phone' ? 'tel' : 'text',\n            className: \"hmk-sequence-input\",\n            placeholder: field === 'phone' ? '010-0000-0000' : field === 'address' ? '시/군/구까지 입력해주세요' : '입력해주세요',\n            value: value,\n            onChange: handleInputChange,\n            onClick: e => e.stopPropagation() // 클릭 이벤트 전파 방지\n            ,\n            disabled: isCompleted && !isEditing\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 29\n          }, this), (!isCompleted || isEditing) && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: `hmk-voice-button ${isRecording ? 'recording' : ''}`,\n              onClick: e => {\n                e.stopPropagation();\n                startListening(field);\n              },\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faMicrophone\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"hmk-confirm-button\",\n              onClick: isEditing ? handleUpdate : () => onConfirm(step),\n              disabled: !value.trim(),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: isEditing ? faCheck : faArrowDown\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }, this);\n  };\n\n  // 컴포넌트 마운트 시 첫 질문\n  _s(Section, \"N4qUVpaen/rROL8jPu/4huFD8lA=\");\n  useEffect(() => {\n    const firstQuestion = getQuestionForStep(1);\n    if (firstQuestion) {\n      speak(firstQuestion);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hmk-sequence-container\",\n    onSubmit: e => e.preventDefault(),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hmk-sequence-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"hmk-back-button\",\n        onClick: () => navigate(-1),\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faArrowLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hmk-progress-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hmk-progress-track\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hmk-progress-fill\",\n            style: {\n              width: `${completedSteps.length / 10 * 100}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"hmk-progress-step\",\n          children: [completedSteps.length, \"/10\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hmk-sections-container\",\n      children: [/*#__PURE__*/_jsxDEV(Section, {\n        step: 1,\n        question: \"\\uC774\\uB984\\uC774 \\uC5B4\\uB5BB\\uAC8C \\uB418\\uC138\\uC694?\",\n        field: \"name\",\n        value: formData.name,\n        onChange: (field, value) => setFormData(prev => ({\n          ...prev,\n          [field]: value\n        })),\n        onConfirm: handleConfirm,\n        isCompleted: completedSteps.includes(1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 17\n      }, this), completedSteps.includes(1) && /*#__PURE__*/_jsxDEV(Section, {\n        step: 2,\n        question: \"\\uB098\\uC774\\uAC00 \\uC5B4\\uB5BB\\uAC8C \\uB418\\uC138\\uC694?\",\n        field: \"age\",\n        value: formData.age,\n        onChange: (field, value) => setFormData(prev => ({\n          ...prev,\n          [field]: value\n        })),\n        onConfirm: handleConfirm,\n        isCompleted: completedSteps.includes(2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 21\n      }, this), completedSteps.includes(2) && /*#__PURE__*/_jsxDEV(Section, {\n        step: 3,\n        question: \"\\uC804\\uD654\\uBC88\\uD638\\uAC00 \\uC5B4\\uB5BB\\uAC8C \\uB418\\uC138\\uC694?\",\n        field: \"phone\",\n        value: formData.phone,\n        onChange: (field, value) => setFormData(prev => ({\n          ...prev,\n          [field]: value\n        })),\n        onConfirm: handleConfirm,\n        isCompleted: completedSteps.includes(3)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 21\n      }, this), completedSteps.includes(3) && /*#__PURE__*/_jsxDEV(Section, {\n        step: 4,\n        question: \"\\uC5B4\\uB514 \\uC0AC\\uC138\\uC694?\",\n        field: \"address\",\n        value: formData.address,\n        onChange: (field, value) => setFormData(prev => ({\n          ...prev,\n          [field]: value\n        })),\n        onConfirm: handleConfirm,\n        isCompleted: completedSteps.includes(4)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 13\n    }, this), isAllCompleted && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hmk-sequence-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"hmk-submit-button\",\n        onClick: handleSubmit,\n        children: \"\\uC81C\\uCD9C\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 276,\n    columnNumber: 9\n  }, this);\n};\n_s2(ResumeSequence, \"KTc8tdNyzpYddY+ocpXk9Be1wcY=\", false, function () {\n  return [useNavigate, useVoiceRecording];\n});\n_c = ResumeSequence;\nexport default ResumeSequence;\nvar _c;\n$RefreshReg$(_c, \"ResumeSequence\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","FontAwesomeIcon","faMicrophone","faArrowLeft","faCheck","faArrowDown","voiceService","useVoiceRecording","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","ResumeSequence","_s2","_s","$RefreshSig$","navigate","currentStep","setCurrentStep","formData","setFormData","savedData","localStorage","getItem","JSON","parse","name","age","phone","address","isListening","setIsListening","completedSteps","setCompletedSteps","inputRef","sectionsRef","isRecording","error","startRecording","audioBlob","setAudioBlob","isProcessing","setIsProcessing","setItem","stringify","isAllCompleted","length","handleSubmit","response","post","data","success","removeItem","console","speak","text","log","audioUrl","textToSpeech","fullUrl","Promise","resolve","audio","Audio","onended","play","catch","startListening","field","mediaRecorder","chunks","ondataavailable","e","push","setTimeout","state","stop","onstop","blob","Blob","type","speechToText","prev","newData","handleConfirm","step","includes","nextSection","current","scrollIntoView","behavior","block","nextQuestion","getQuestionForStep","AgeButtonGroup","value","onChange","disabled","className","children","map","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Section","question","onConfirm","isCompleted","isEditing","setIsEditing","handleInputChange","preventDefault","stopPropagation","newValue","target","handleUpdate","ref","el","icon","placeholder","trim","firstQuestion","onSubmit","style","width","_c","$RefreshReg$"],"sources":["D:/dev/finalproj/react_finalproj/client/src/components/forms/ResumeSequence.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMicrophone, faArrowLeft, faCheck, faArrowDown } from '@fortawesome/free-solid-svg-icons';\r\nimport '../../assets/css/resumeSequence.css';\r\nimport { voiceService } from '../../api/voiceService';\r\nimport { useVoiceRecording } from '../../hooks/useVoiceRecording';\r\nimport axios from 'axios';\r\n\r\nconst ResumeSequence = () => {\r\n    const navigate = useNavigate();\r\n    const [currentStep, setCurrentStep] = useState(1);\r\n    const [formData, setFormData] = useState(() => {\r\n        // 로컬 스토리지에서 기존 데이터 불러오기\r\n        const savedData = localStorage.getItem('resumeFormData');\r\n        return savedData ? JSON.parse(savedData) : {\r\n            name: '',\r\n            age: '',\r\n            phone: '',\r\n            address: '',\r\n        };\r\n    });\r\n    const [isListening, setIsListening] = useState(false);\r\n    const [completedSteps, setCompletedSteps] = useState([]);\r\n    const inputRef = useRef(null);\r\n    const sectionsRef = useRef([]);\r\n    const { isRecording, error, startRecording } = useVoiceRecording();\r\n    const [audioBlob, setAudioBlob] = useState(null);\r\n    const [isProcessing, setIsProcessing] = useState(false);\r\n\r\n    // 폼 데이터가 변경될 때마다 로컬 스토리지에 저장\r\n    useEffect(() => {\r\n        localStorage.setItem('resumeFormData', JSON.stringify(formData));\r\n    }, [formData]);\r\n\r\n    // 모든 단계가 완료되었는지 확인\r\n    const isAllCompleted = completedSteps.length === 4;\r\n\r\n    // 폼 제출 처리\r\n    const handleSubmit = async () => {\r\n        try {\r\n            // 서버로 데이터 전송\r\n            const response = await axios.post('http://localhost:8000/api/resume', formData);\r\n            if (response.data.success) {\r\n                // 성공 시 로컬 스토리지 클리어\r\n                localStorage.removeItem('resumeFormData');\r\n                // 다음 페이지로 이동\r\n                navigate('/success');\r\n            }\r\n        } catch (error) {\r\n            console.error('폼 제출 중 오류:', error);\r\n        }\r\n    };\r\n\r\n    // TTS 기능 - 질문하기\r\n    const speak = async (text) => {\r\n        try {\r\n            console.log('TTS 요청 시작:', text);\r\n            const audioUrl = await voiceService.textToSpeech(text);\r\n            const fullUrl = `http://localhost:8000${audioUrl}`;\r\n            \r\n            // 오디오 재생이 완료될 때까지 대기\r\n            return new Promise((resolve) => {\r\n                const audio = new Audio(fullUrl);\r\n                audio.onended = () => resolve();  // 재생 완료 시 Promise 해결\r\n                audio.play().catch(error => {\r\n                    console.error('오디오 재생 중 오류:', error);\r\n                    resolve();  // 에러 발생해도 진행\r\n                });\r\n            });\r\n        } catch (error) {\r\n            console.error('TTS 실행 중 오류 발생:', error);\r\n        }\r\n    };\r\n\r\n    // STT 기능 - 답변 받기\r\n    const startListening = async (field) => {\r\n        if (isProcessing) return;\r\n        \r\n        try {\r\n            setIsProcessing(true);\r\n            const mediaRecorder = await startRecording();\r\n            let chunks = [];\r\n\r\n            mediaRecorder.ondataavailable = (e) => {\r\n                chunks.push(e.data);\r\n            };\r\n            \r\n            setTimeout(() => {\r\n                if (mediaRecorder?.state === 'recording') {\r\n                    mediaRecorder.stop();\r\n                }\r\n            }, 3000);\r\n\r\n            mediaRecorder.onstop = async () => {\r\n                try {\r\n                    const blob = new Blob(chunks, { type: 'audio/webm' });\r\n                    const text = await voiceService.speechToText(blob);\r\n                    if (text) {\r\n                        setFormData(prev => {\r\n                            const newData = {\r\n                                ...prev,\r\n                                [field]: text\r\n                            };\r\n                            // 로컬 스토리지 업데이트\r\n                            localStorage.setItem('resumeFormData', JSON.stringify(newData));\r\n                            return newData;\r\n                        });\r\n                        handleConfirm(currentStep);\r\n                    }\r\n                } catch (error) {\r\n                    console.error('음성 인식 중 오류:', error);\r\n                } finally {\r\n                    setIsProcessing(false);\r\n                }\r\n            };\r\n        } catch (error) {\r\n            console.error('음성 녹음 중 오류:', error);\r\n            setIsProcessing(false);\r\n        }\r\n    };\r\n\r\n    // 단계 진행 처리\r\n    const handleConfirm = async (step) => {\r\n        if (!completedSteps.includes(step)) {\r\n            setCompletedSteps(prev => [...prev, step]);\r\n            setCurrentStep(step + 1);\r\n            \r\n            // 다음 섹션으로 스크롤\r\n            setTimeout(() => {\r\n                const nextSection = sectionsRef.current[step];\r\n                if (nextSection) {\r\n                    nextSection.scrollIntoView({ \r\n                        behavior: 'smooth',\r\n                        block: 'start'\r\n                    });\r\n                }\r\n            }, 100);\r\n\r\n            // 다음 질문 읽어주기\r\n            const nextQuestion = getQuestionForStep(step + 1);\r\n            if (nextQuestion) {\r\n                await speak(nextQuestion);  // 질문이 끝날 때까지 대기\r\n            }\r\n        }\r\n    };\r\n\r\n    // 질문 텍스트 가져오기\r\n    const getQuestionForStep = (step) => {\r\n        switch (step) {\r\n            case 1:\r\n                return \"이름이 어떻게 되세요?\";\r\n            case 2:\r\n                return \"나이가 어떻게 되세요?\";\r\n            case 3:\r\n                return \"전화번호가 어떻게 되세요?\";\r\n            case 4:\r\n                return \"어디 사세요?\";\r\n            default:\r\n                return \"\";\r\n        }\r\n    };\r\n\r\n    // 나이 선택을 위한 버튼 그룹 컴포넌트\r\n    const AgeButtonGroup = ({ value, onChange, disabled }) => (\r\n        <div className=\"hmk-age-buttons\">\r\n            {['50대', '60대', '70대', '80대', '90대 이상'].map((age) => (\r\n                <button\r\n                    key={age}\r\n                    type=\"button\"\r\n                    className={`hmk-age-button ${value === age ? 'selected' : ''}`}\r\n                    onClick={() => onChange('age', age)}\r\n                    disabled={disabled}\r\n                >\r\n                    {age}\r\n                </button>\r\n            ))}\r\n        </div>\r\n    );\r\n\r\n    // 각 섹션 컴포넌트\r\n    const Section = ({ step, question, field, value, onChange, onConfirm, isCompleted }) => {\r\n        const [isEditing, setIsEditing] = useState(false);\r\n\r\n        const handleInputChange = (e) => {\r\n            e.preventDefault();  // 이벤트 기본 동작 방지\r\n            e.stopPropagation(); // 이벤트 전파 방지\r\n            const newValue = e.target.value;\r\n            onChange(field, newValue);\r\n        };\r\n\r\n        const handleUpdate = (e) => {  // handleUpdate 함수 추가\r\n            e.stopPropagation();\r\n            setIsEditing(false);\r\n            onConfirm(step);\r\n        };\r\n\r\n        return (\r\n            <div \r\n                ref={el => sectionsRef.current[step-1] = el}\r\n                className={`hmk-sequence-section ${isCompleted ? 'completed' : ''} ${currentStep === step ? 'active' : ''}`}\r\n            >\r\n                <div className=\"hmk-sequence-content\">\r\n                    <h2 className=\"hmk-sequence-question\">\r\n                        {question}\r\n                    </h2>\r\n\r\n                    {step === 2 ? (\r\n                        <div className=\"hmk-input-container\">\r\n                            <AgeButtonGroup \r\n                                value={value}\r\n                                onChange={onChange}\r\n                                disabled={isCompleted && !isEditing}\r\n                            />\r\n                            {(!isCompleted || isEditing) && (\r\n                                <button \r\n                                    className=\"hmk-confirm-button\"\r\n                                    onClick={isEditing ? handleUpdate : () => onConfirm(step)}\r\n                                    disabled={!value}\r\n                                >\r\n                                    <FontAwesomeIcon icon={isEditing ? faCheck : faArrowDown} />\r\n                                </button>\r\n                            )}\r\n                        </div>\r\n                    ) : (\r\n                        <div className=\"hmk-input-container\" onClick={(e) => e.stopPropagation()}>\r\n                            <input\r\n                                type={field === 'phone' ? 'tel' : 'text'}\r\n                                className=\"hmk-sequence-input\"\r\n                                placeholder={\r\n                                    field === 'phone' ? '010-0000-0000' :\r\n                                    field === 'address' ? '시/군/구까지 입력해주세요' :\r\n                                    '입력해주세요'\r\n                                }\r\n                                value={value}\r\n                                onChange={handleInputChange}\r\n                                onClick={(e) => e.stopPropagation()}  // 클릭 이벤트 전파 방지\r\n                                disabled={isCompleted && !isEditing}\r\n                            />\r\n                            {(!isCompleted || isEditing) && (\r\n                                <>\r\n                                    <button \r\n                                        className={`hmk-voice-button ${isRecording ? 'recording' : ''}`}\r\n                                        onClick={(e) => {\r\n                                            e.stopPropagation();\r\n                                            startListening(field);\r\n                                        }}\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faMicrophone} />\r\n                                    </button>\r\n                                    <button \r\n                                        className=\"hmk-confirm-button\"\r\n                                        onClick={isEditing ? handleUpdate : () => onConfirm(step)}\r\n                                        disabled={!value.trim()}\r\n                                    >\r\n                                        <FontAwesomeIcon icon={isEditing ? faCheck : faArrowDown} />\r\n                                    </button>\r\n                                </>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    // 컴포넌트 마운트 시 첫 질문\r\n    useEffect(() => {\r\n        const firstQuestion = getQuestionForStep(1);\r\n        if (firstQuestion) {\r\n            speak(firstQuestion);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div \r\n            className=\"hmk-sequence-container\"\r\n            onSubmit={e => e.preventDefault()}\r\n        >\r\n            <div className=\"hmk-sequence-header\">\r\n                <button \r\n                    className=\"hmk-back-button\"\r\n                    onClick={() => navigate(-1)}\r\n                >\r\n                    <FontAwesomeIcon icon={faArrowLeft} />\r\n                </button>\r\n                <div className=\"hmk-progress-bar\">\r\n                    <div className=\"hmk-progress-track\">\r\n                        <div \r\n                            className=\"hmk-progress-fill\"\r\n                            style={{ width: `${(completedSteps.length / 10) * 100}%` }}\r\n                        ></div>\r\n                    </div>\r\n                    <span className=\"hmk-progress-step\">{completedSteps.length}/10</span>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"hmk-sections-container\">\r\n                <Section \r\n                    step={1}\r\n                    question=\"이름이 어떻게 되세요?\"\r\n                    field=\"name\"\r\n                    value={formData.name}\r\n                    onChange={(field, value) => setFormData(prev => ({...prev, [field]: value}))}\r\n                    onConfirm={handleConfirm}\r\n                    isCompleted={completedSteps.includes(1)}\r\n                />\r\n                {completedSteps.includes(1) && (\r\n                    <Section \r\n                        step={2}\r\n                        question=\"나이가 어떻게 되세요?\"\r\n                        field=\"age\"\r\n                        value={formData.age}\r\n                        onChange={(field, value) => setFormData(prev => ({...prev, [field]: value}))}\r\n                        onConfirm={handleConfirm}\r\n                        isCompleted={completedSteps.includes(2)}\r\n                    />\r\n                )}\r\n                {completedSteps.includes(2) && (\r\n                    <Section \r\n                        step={3}\r\n                        question=\"전화번호가 어떻게 되세요?\"\r\n                        field=\"phone\"\r\n                        value={formData.phone}\r\n                        onChange={(field, value) => setFormData(prev => ({...prev, [field]: value}))}\r\n                        onConfirm={handleConfirm}\r\n                        isCompleted={completedSteps.includes(3)}\r\n                    />\r\n                )}\r\n                {completedSteps.includes(3) && (\r\n                    <Section \r\n                        step={4}\r\n                        question=\"어디 사세요?\"\r\n                        field=\"address\"\r\n                        value={formData.address}\r\n                        onChange={(field, value) => setFormData(prev => ({...prev, [field]: value}))}\r\n                        onConfirm={handleConfirm}\r\n                        isCompleted={completedSteps.includes(4)}\r\n                    />\r\n                )}\r\n            </div>\r\n\r\n            {/* 모든 단계가 완료되면 제출 버튼 표시 */}\r\n            {isAllCompleted && (\r\n                <div className=\"hmk-sequence-footer\">\r\n                    <button \r\n                        className=\"hmk-submit-button\"\r\n                        onClick={handleSubmit}\r\n                    >\r\n                        제출하기\r\n                    </button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ResumeSequence; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}