{"ast":null,"code":"var _jsxFileName = \"D:\\\\dev\\\\finalproj\\\\react_finalproj\\\\src\\\\components\\\\forms\\\\HealthAndProgramForm.jsx\";\nimport React from 'react';\nimport { healthStatusOptions, desiredProgramOptions, applicationMotiveOptions } from '../../constants/formOptions';\nimport { scrollToNextSection } from '../../utils/scrollHelper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HealthAndProgramForm = ({\n  formData,\n  handleHealthSelect,\n  handleChange,\n  handleMotiveSelect\n}) => {\n  const handleProgramSelect = value => {\n    const currentPrograms = Object.values(formData.desiredPrograms).filter(Boolean);\n\n    // 이미 선택된 항목 클릭 시 해당 항목 제거\n    if (Object.values(formData.desiredPrograms).includes(value)) {\n      const updatedPrograms = {\n        first: '',\n        second: '',\n        third: ''\n      };\n      const existingPrograms = Object.values(formData.desiredPrograms).filter(program => program && program !== value);\n      existingPrograms.forEach((program, index) => {\n        updatedPrograms[Object.keys(updatedPrograms)[index]] = program;\n      });\n      handleChange({\n        target: {\n          name: 'desiredPrograms',\n          value: updatedPrograms\n        }\n      });\n      return;\n    }\n\n    // 새로운 항목 선택 시\n    if (currentPrograms.length < 3) {\n      const position = ['first', 'second', 'third'][currentPrograms.length];\n      handleChange({\n        target: {\n          name: `desiredPrograms.${position}`,\n          value\n        }\n      });\n    }\n  };\n  const getProgramRank = value => {\n    const programs = formData.desiredPrograms;\n    if (programs.first === value) return 1;\n    if (programs.second === value) return 2;\n    if (programs.third === value) return 3;\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hmk-form-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"hmk-section-title\",\n      children: \"\\uD604\\uC7AC \\uAC74\\uAC15 \\uC0C1\\uD0DC\\uB294 \\uC5B4\\uB5A0\\uC2E0\\uAC00\\uC694?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hmk-card-grid\",\n      children: healthStatusOptions.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `hmk-selection-card ${formData.healthStatus === option.value ? 'selected' : ''}`,\n        onClick: e => {\n          handleHealthSelect(option.value);\n          scrollToNextSection(e.currentTarget);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"hmk-card-icon\",\n          children: option.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"hmk-card-label\",\n          children: option.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, option.value, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"hmk-section-title\",\n      children: \"\\uCC38\\uC5EC\\uD558\\uACE0 \\uC2F6\\uC740 \\uC77C\\uC790\\uB9AC\\uB97C \\uC120\\uD0DD\\uD574\\uC8FC\\uC138\\uC694 (\\uCD5C\\uB300 3\\uAC1C)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hmk-card-grid\",\n      children: desiredProgramOptions.map(option => {\n        const rank = getProgramRank(option.value);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `hmk-selection-card ${rank ? 'selected' : ''}`,\n          onClick: () => handleProgramSelect(option.value),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"hmk-card-icon\",\n            children: option.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"hmk-card-label\",\n            children: option.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), rank && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"hmk-rank-badge\",\n            children: [rank, \"\\uC21C\\uC704\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 24\n          }, this)]\n        }, option.value, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"hmk-section-title\",\n      children: \"\\uC2E0\\uCCAD \\uB3D9\\uAE30\\uB97C \\uC120\\uD0DD\\uD574\\uC8FC\\uC138\\uC694 (\\uC5EC\\uB7EC \\uAC1C \\uC120\\uD0DD \\uAC00\\uB2A5)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hmk-card-grid\",\n      children: applicationMotiveOptions.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `hmk-selection-card ${formData.applicationMotives.includes(option.value) ? 'selected' : ''}`,\n        onClick: () => handleMotiveSelect(option.value),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"hmk-card-icon\",\n          children: option.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"hmk-card-label\",\n          children: option.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, option.value, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_c = HealthAndProgramForm;\nexport default HealthAndProgramForm;\nvar _c;\n$RefreshReg$(_c, \"HealthAndProgramForm\");","map":{"version":3,"names":["React","healthStatusOptions","desiredProgramOptions","applicationMotiveOptions","scrollToNextSection","jsxDEV","_jsxDEV","HealthAndProgramForm","formData","handleHealthSelect","handleChange","handleMotiveSelect","handleProgramSelect","value","currentPrograms","Object","values","desiredPrograms","filter","Boolean","includes","updatedPrograms","first","second","third","existingPrograms","program","forEach","index","keys","target","name","length","position","getProgramRank","programs","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","option","healthStatus","onClick","e","currentTarget","icon","label","rank","applicationMotives","_c","$RefreshReg$"],"sources":["D:/dev/finalproj/react_finalproj/src/components/forms/HealthAndProgramForm.jsx"],"sourcesContent":["import React from 'react';\r\nimport { healthStatusOptions, desiredProgramOptions, applicationMotiveOptions } from '../../constants/formOptions';\r\nimport { scrollToNextSection } from '../../utils/scrollHelper';\r\n\r\nconst HealthAndProgramForm = ({ \r\n  formData, \r\n  handleHealthSelect,\r\n  handleChange,\r\n  handleMotiveSelect\r\n}) => {\r\n  const handleProgramSelect = (value) => {\r\n    const currentPrograms = Object.values(formData.desiredPrograms).filter(Boolean);\r\n    \r\n    // 이미 선택된 항목 클릭 시 해당 항목 제거\r\n    if (Object.values(formData.desiredPrograms).includes(value)) {\r\n      const updatedPrograms = {\r\n        first: '',\r\n        second: '',\r\n        third: ''\r\n      };\r\n      \r\n      const existingPrograms = Object.values(formData.desiredPrograms)\r\n        .filter(program => program && program !== value);\r\n      \r\n      existingPrograms.forEach((program, index) => {\r\n        updatedPrograms[Object.keys(updatedPrograms)[index]] = program;\r\n      });\r\n      \r\n      handleChange({\r\n        target: {\r\n          name: 'desiredPrograms',\r\n          value: updatedPrograms\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    // 새로운 항목 선택 시\r\n    if (currentPrograms.length < 3) {\r\n      const position = ['first', 'second', 'third'][currentPrograms.length];\r\n      handleChange({\r\n        target: {\r\n          name: `desiredPrograms.${position}`,\r\n          value\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const getProgramRank = (value) => {\r\n    const programs = formData.desiredPrograms;\r\n    if (programs.first === value) return 1;\r\n    if (programs.second === value) return 2;\r\n    if (programs.third === value) return 3;\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <div className=\"hmk-form-section\">\r\n      <h2 className=\"hmk-section-title\">현재 건강 상태는 어떠신가요?</h2>\r\n      <div className=\"hmk-card-grid\">\r\n        {healthStatusOptions.map(option => (\r\n          <div\r\n            key={option.value}\r\n            className={`hmk-selection-card ${formData.healthStatus === option.value ? 'selected' : ''}`}\r\n            onClick={(e) => {\r\n              handleHealthSelect(option.value);\r\n              scrollToNextSection(e.currentTarget);\r\n            }}\r\n          >\r\n            <span className=\"hmk-card-icon\">{option.icon}</span>\r\n            <span className=\"hmk-card-label\">{option.label}</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <h2 className=\"hmk-section-title\">참여하고 싶은 일자리를 선택해주세요 (최대 3개)</h2>\r\n      <div className=\"hmk-card-grid\">\r\n        {desiredProgramOptions.map(option => {\r\n          const rank = getProgramRank(option.value);\r\n          return (\r\n            <div\r\n              key={option.value}\r\n              className={`hmk-selection-card ${rank ? 'selected' : ''}`}\r\n              onClick={() => handleProgramSelect(option.value)}\r\n            >\r\n              <span className=\"hmk-card-icon\">{option.icon}</span>\r\n              <span className=\"hmk-card-label\">{option.label}</span>\r\n              {rank && <span className=\"hmk-rank-badge\">{rank}순위</span>}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      <h2 className=\"hmk-section-title\">신청 동기를 선택해주세요 (여러 개 선택 가능)</h2>\r\n      <div className=\"hmk-card-grid\">\r\n        {applicationMotiveOptions.map(option => (\r\n          <div\r\n            key={option.value}\r\n            className={`hmk-selection-card ${formData.applicationMotives.includes(option.value) ? 'selected' : ''}`}\r\n            onClick={() => handleMotiveSelect(option.value)}\r\n          >\r\n            <span className=\"hmk-card-icon\">{option.icon}</span>\r\n            <span className=\"hmk-card-label\">{option.label}</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HealthAndProgramForm; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,EAAEC,qBAAqB,EAAEC,wBAAwB,QAAQ,6BAA6B;AAClH,SAASC,mBAAmB,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,MAAMC,oBAAoB,GAAGA,CAAC;EAC5BC,QAAQ;EACRC,kBAAkB;EAClBC,YAAY;EACZC;AACF,CAAC,KAAK;EACJ,MAAMC,mBAAmB,GAAIC,KAAK,IAAK;IACrC,MAAMC,eAAe,GAAGC,MAAM,CAACC,MAAM,CAACR,QAAQ,CAACS,eAAe,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC;;IAE/E;IACA,IAAIJ,MAAM,CAACC,MAAM,CAACR,QAAQ,CAACS,eAAe,CAAC,CAACG,QAAQ,CAACP,KAAK,CAAC,EAAE;MAC3D,MAAMQ,eAAe,GAAG;QACtBC,KAAK,EAAE,EAAE;QACTC,MAAM,EAAE,EAAE;QACVC,KAAK,EAAE;MACT,CAAC;MAED,MAAMC,gBAAgB,GAAGV,MAAM,CAACC,MAAM,CAACR,QAAQ,CAACS,eAAe,CAAC,CAC7DC,MAAM,CAACQ,OAAO,IAAIA,OAAO,IAAIA,OAAO,KAAKb,KAAK,CAAC;MAElDY,gBAAgB,CAACE,OAAO,CAAC,CAACD,OAAO,EAAEE,KAAK,KAAK;QAC3CP,eAAe,CAACN,MAAM,CAACc,IAAI,CAACR,eAAe,CAAC,CAACO,KAAK,CAAC,CAAC,GAAGF,OAAO;MAChE,CAAC,CAAC;MAEFhB,YAAY,CAAC;QACXoB,MAAM,EAAE;UACNC,IAAI,EAAE,iBAAiB;UACvBlB,KAAK,EAAEQ;QACT;MACF,CAAC,CAAC;MACF;IACF;;IAEA;IACA,IAAIP,eAAe,CAACkB,MAAM,GAAG,CAAC,EAAE;MAC9B,MAAMC,QAAQ,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,OAAO,CAAC,CAACnB,eAAe,CAACkB,MAAM,CAAC;MACrEtB,YAAY,CAAC;QACXoB,MAAM,EAAE;UACNC,IAAI,EAAE,mBAAmBE,QAAQ,EAAE;UACnCpB;QACF;MACF,CAAC,CAAC;IACJ;EACF,CAAC;EAED,MAAMqB,cAAc,GAAIrB,KAAK,IAAK;IAChC,MAAMsB,QAAQ,GAAG3B,QAAQ,CAACS,eAAe;IACzC,IAAIkB,QAAQ,CAACb,KAAK,KAAKT,KAAK,EAAE,OAAO,CAAC;IACtC,IAAIsB,QAAQ,CAACZ,MAAM,KAAKV,KAAK,EAAE,OAAO,CAAC;IACvC,IAAIsB,QAAQ,CAACX,KAAK,KAAKX,KAAK,EAAE,OAAO,CAAC;IACtC,OAAO,IAAI;EACb,CAAC;EAED,oBACEP,OAAA;IAAK8B,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/B/B,OAAA;MAAI8B,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvDnC,OAAA;MAAK8B,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC3BpC,mBAAmB,CAACyC,GAAG,CAACC,MAAM,iBAC7BrC,OAAA;QAEE8B,SAAS,EAAE,sBAAsB5B,QAAQ,CAACoC,YAAY,KAAKD,MAAM,CAAC9B,KAAK,GAAG,UAAU,GAAG,EAAE,EAAG;QAC5FgC,OAAO,EAAGC,CAAC,IAAK;UACdrC,kBAAkB,CAACkC,MAAM,CAAC9B,KAAK,CAAC;UAChCT,mBAAmB,CAAC0C,CAAC,CAACC,aAAa,CAAC;QACtC,CAAE;QAAAV,QAAA,gBAEF/B,OAAA;UAAM8B,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAEM,MAAM,CAACK;QAAI;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpDnC,OAAA;UAAM8B,SAAS,EAAC,gBAAgB;UAAAC,QAAA,EAAEM,MAAM,CAACM;QAAK;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA,GARjDE,MAAM,CAAC9B,KAAK;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASd,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENnC,OAAA;MAAI8B,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAAC;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClEnC,OAAA;MAAK8B,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC3BnC,qBAAqB,CAACwC,GAAG,CAACC,MAAM,IAAI;QACnC,MAAMO,IAAI,GAAGhB,cAAc,CAACS,MAAM,CAAC9B,KAAK,CAAC;QACzC,oBACEP,OAAA;UAEE8B,SAAS,EAAE,sBAAsBc,IAAI,GAAG,UAAU,GAAG,EAAE,EAAG;UAC1DL,OAAO,EAAEA,CAAA,KAAMjC,mBAAmB,CAAC+B,MAAM,CAAC9B,KAAK,CAAE;UAAAwB,QAAA,gBAEjD/B,OAAA;YAAM8B,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAEM,MAAM,CAACK;UAAI;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACpDnC,OAAA;YAAM8B,SAAS,EAAC,gBAAgB;YAAAC,QAAA,EAAEM,MAAM,CAACM;UAAK;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,EACrDS,IAAI,iBAAI5C,OAAA;YAAM8B,SAAS,EAAC,gBAAgB;YAAAC,QAAA,GAAEa,IAAI,EAAC,cAAE;UAAA;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA,GANpDE,MAAM,CAAC9B,KAAK;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOd,CAAC;MAEV,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENnC,OAAA;MAAI8B,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAAC;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjEnC,OAAA;MAAK8B,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC3BlC,wBAAwB,CAACuC,GAAG,CAACC,MAAM,iBAClCrC,OAAA;QAEE8B,SAAS,EAAE,sBAAsB5B,QAAQ,CAAC2C,kBAAkB,CAAC/B,QAAQ,CAACuB,MAAM,CAAC9B,KAAK,CAAC,GAAG,UAAU,GAAG,EAAE,EAAG;QACxGgC,OAAO,EAAEA,CAAA,KAAMlC,kBAAkB,CAACgC,MAAM,CAAC9B,KAAK,CAAE;QAAAwB,QAAA,gBAEhD/B,OAAA;UAAM8B,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAEM,MAAM,CAACK;QAAI;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpDnC,OAAA;UAAM8B,SAAS,EAAC,gBAAgB;UAAAC,QAAA,EAAEM,MAAM,CAACM;QAAK;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA,GALjDE,MAAM,CAAC9B,KAAK;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMd,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACW,EAAA,GAzGI7C,oBAAoB;AA2G1B,eAAeA,oBAAoB;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}