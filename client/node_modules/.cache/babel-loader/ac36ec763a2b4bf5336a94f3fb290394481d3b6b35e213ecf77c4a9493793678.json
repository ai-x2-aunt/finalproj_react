{"ast":null,"code":"var _jsxFileName = \"D:\\\\dev\\\\finalproj\\\\react_finalproj\\\\src\\\\components\\\\manage\\\\chatbot\\\\APIKeyManagement.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst APIKeyManagement = ({\n  selectedAPI,\n  onApiKeyChange\n}) => {\n  _s();\n  const [apiKey, setApiKey] = useState('');\n  const [isEditing, setIsEditing] = useState(false);\n\n  // API 키를 안전하게 저장 (예: localStorage 또는 서버)\n  const handleSave = async () => {\n    try {\n      // API 키 유효성 검증\n      const isValid = await validateApiKey(selectedAPI, apiKey);\n      if (isValid) {\n        // 부모 컴포넌트에 API 키 전달\n        onApiKeyChange(apiKey);\n\n        // 안전한 저장소에 API 키 저장\n        localStorage.setItem(`${selectedAPI}_api_key`, apiKey);\n        setIsEditing(false);\n      } else {\n        alert('유효하지 않은 API 키입니다.');\n      }\n    } catch (error) {\n      alert('API 키 저장 중 오류가 발생했습니다.');\n      console.error(error);\n    }\n  };\n\n  // API 키 삭제\n  const handleDelete = () => {\n    localStorage.removeItem(`${selectedAPI}_api_key`);\n    setApiKey('');\n    onApiKeyChange(null);\n  };\n\n  // API 제공자가 변경될 때 저장된 API 키 불러오기\n  useEffect(() => {\n    const savedKey = localStorage.getItem(`${selectedAPI}_api_key`);\n    if (savedKey) {\n      setApiKey(savedKey);\n      onApiKeyChange(savedKey);\n    }\n  }, [selectedAPI]);\n\n  // API 키 유효성 검증 함수\n  const validateApiKey = async (provider, key) => {\n    try {\n      // 각 API 제공자별 검증 로직\n      if (provider === 'openai') {\n        const response = await fetch('https://api.openai.com/v1/models', {\n          headers: {\n            'Authorization': `Bearer ${key}`\n          }\n        });\n        return response.ok;\n      } else if (provider === 'google') {\n        // Google AI API 키 검증 로직\n        // ...\n      }\n    } catch (error) {\n      console.error('API 키 검증 중 오류:', error);\n      return false;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hmk-manage-api-key\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"API \\uD0A4 \\uAD00\\uB9AC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hmk-manage-api-key-content\",\n      children: isEditing ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hmk-manage-api-key-edit\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: apiKey,\n          onChange: e => setApiKey(e.target.value),\n          placeholder: `${selectedAPI} API 키 입력`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"hmk-manage-button\",\n          onClick: handleSave,\n          children: \"\\uC800\\uC7A5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"hmk-manage-button\",\n          onClick: () => setIsEditing(false),\n          children: \"\\uCDE8\\uC18C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hmk-manage-api-key-display\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: apiKey ? '••••••••' : 'API 키가 설정되지 않았습니다'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"hmk-manage-button\",\n          onClick: () => setIsEditing(true),\n          children: apiKey ? '수정' : '추가'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this), apiKey && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"hmk-manage-button danger\",\n          onClick: handleDelete,\n          children: \"\\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_s(APIKeyManagement, \"/0wVo1ad87URFJroFFl1VdgmX+g=\");\n_c = APIKeyManagement;\nexport default APIKeyManagement;\nvar _c;\n$RefreshReg$(_c, \"APIKeyManagement\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","APIKeyManagement","selectedAPI","onApiKeyChange","_s","apiKey","setApiKey","isEditing","setIsEditing","handleSave","isValid","validateApiKey","localStorage","setItem","alert","error","console","handleDelete","removeItem","savedKey","getItem","provider","key","response","fetch","headers","ok","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["D:/dev/finalproj/react_finalproj/src/components/manage/chatbot/APIKeyManagement.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst APIKeyManagement = ({ selectedAPI, onApiKeyChange }) => {\r\n    const [apiKey, setApiKey] = useState('');\r\n    const [isEditing, setIsEditing] = useState(false);\r\n\r\n    // API 키를 안전하게 저장 (예: localStorage 또는 서버)\r\n    const handleSave = async () => {\r\n        try {\r\n            // API 키 유효성 검증\r\n            const isValid = await validateApiKey(selectedAPI, apiKey);\r\n            \r\n            if (isValid) {\r\n                // 부모 컴포넌트에 API 키 전달\r\n                onApiKeyChange(apiKey);\r\n                \r\n                // 안전한 저장소에 API 키 저장\r\n                localStorage.setItem(`${selectedAPI}_api_key`, apiKey);\r\n                \r\n                setIsEditing(false);\r\n            } else {\r\n                alert('유효하지 않은 API 키입니다.');\r\n            }\r\n        } catch (error) {\r\n            alert('API 키 저장 중 오류가 발생했습니다.');\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    // API 키 삭제\r\n    const handleDelete = () => {\r\n        localStorage.removeItem(`${selectedAPI}_api_key`);\r\n        setApiKey('');\r\n        onApiKeyChange(null);\r\n    };\r\n\r\n    // API 제공자가 변경될 때 저장된 API 키 불러오기\r\n    useEffect(() => {\r\n        const savedKey = localStorage.getItem(`${selectedAPI}_api_key`);\r\n        if (savedKey) {\r\n            setApiKey(savedKey);\r\n            onApiKeyChange(savedKey);\r\n        }\r\n    }, [selectedAPI]);\r\n\r\n    // API 키 유효성 검증 함수\r\n    const validateApiKey = async (provider, key) => {\r\n        try {\r\n            // 각 API 제공자별 검증 로직\r\n            if (provider === 'openai') {\r\n                const response = await fetch('https://api.openai.com/v1/models', {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${key}`\r\n                    }\r\n                });\r\n                return response.ok;\r\n            } else if (provider === 'google') {\r\n                // Google AI API 키 검증 로직\r\n                // ...\r\n            }\r\n        } catch (error) {\r\n            console.error('API 키 검증 중 오류:', error);\r\n            return false;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"hmk-manage-api-key\">\r\n            <h3>API 키 관리</h3>\r\n            <div className=\"hmk-manage-api-key-content\">\r\n                {isEditing ? (\r\n                    <div className=\"hmk-manage-api-key-edit\">\r\n                        <input\r\n                            type=\"password\"\r\n                            value={apiKey}\r\n                            onChange={(e) => setApiKey(e.target.value)}\r\n                            placeholder={`${selectedAPI} API 키 입력`}\r\n                        />\r\n                        <button \r\n                            className=\"hmk-manage-button\"\r\n                            onClick={handleSave}\r\n                        >\r\n                            저장\r\n                        </button>\r\n                        <button \r\n                            className=\"hmk-manage-button\"\r\n                            onClick={() => setIsEditing(false)}\r\n                        >\r\n                            취소\r\n                        </button>\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"hmk-manage-api-key-display\">\r\n                        <span>{apiKey ? '••••••••' : 'API 키가 설정되지 않았습니다'}</span>\r\n                        <button \r\n                            className=\"hmk-manage-button\"\r\n                            onClick={() => setIsEditing(true)}\r\n                        >\r\n                            {apiKey ? '수정' : '추가'}\r\n                        </button>\r\n                        {apiKey && (\r\n                            <button \r\n                                className=\"hmk-manage-button danger\"\r\n                                onClick={handleDelete}\r\n                            >\r\n                                삭제\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default APIKeyManagement; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}