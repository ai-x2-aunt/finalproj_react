{"ast":null,"code":"var _jsxFileName = \"D:\\\\dev\\\\finalproj\\\\react_finalproj\\\\client\\\\src\\\\components\\\\forms\\\\ResumeSequence.jsx\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMicrophone, faArrowLeft, faCheck, faArrowDown } from '@fortawesome/free-solid-svg-icons';\nimport '../../assets/css/resumeSequence.css';\nimport { voiceService } from '../../api/voiceService';\nimport { useVoiceRecording } from '../../hooks/useVoiceRecording';\nimport axios from 'axios';\n\n// 미리 녹음된 안내 음성 파일 import\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst audioGuides = {\n  1: '/static/audio/guides/name_question.mp3',\n  // \"이름이 어떻게 되세요?\"\n  2: '/static/audio/guides/age_question.mp3',\n  // \"나이가 어떻게 되세요?\"\n  3: '/static/audio/guides/phone_question.mp3',\n  // \"전화번호가 어떻게 되세요?\"\n  4: '/static/audio/guides/address_question.mp3' // \"어디 사세요?\"\n};\nconst ResumeSequence = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const navigate = useNavigate();\n  const [currentStep, setCurrentStep] = useState(0);\n  const [formData, setFormData] = useState({\n    name: '',\n    phone: '',\n    address: '',\n    job: ''\n  });\n  const [isVoiceMode, setIsVoiceMode] = useState(false);\n  const [completedSteps, setCompletedSteps] = useState([]);\n  const inputRef = useRef(null);\n  const sectionsRef = useRef([]);\n  const {\n    isRecording,\n    startRecording,\n    stopRecording,\n    checkSilence\n  } = useVoiceRecording();\n  const [audioBlob, setAudioBlob] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  // 폼 데이터가 변경될 때마다 로컬 스토리지에 저장\n  useEffect(() => {\n    localStorage.setItem('resumeFormData', JSON.stringify(formData));\n  }, [formData]);\n\n  // 모든 단계가 완료되었는지 확인\n  const isAllCompleted = completedSteps.length === 4;\n\n  // 폼 제출 처리\n  const handleSubmit = async () => {\n    try {\n      // 서버로 데이터 전송\n      const response = await axios.post('http://localhost:8000/api/voice/resume', formData);\n      if (response.data.success) {\n        // 성공 시 로컬 스토리지 클리어\n        localStorage.removeItem('resumeFormData');\n        // 다음 페이지로 이동\n        navigate('/success');\n      }\n    } catch (error) {\n      console.error('폼 제출 중 오류:', error);\n    }\n  };\n\n  // TTS 함수 수정\n  const speak = async step => {\n    try {\n      const audioUrl = `http://localhost:8000${audioGuides[step]}`;\n      const audio = new Audio(audioUrl);\n      return new Promise(resolve => {\n        audio.onended = () => resolve();\n        audio.onerror = () => {\n          console.error('오디오 재생 중 오류');\n          resolve();\n        };\n        audio.play();\n      });\n    } catch (error) {\n      console.error('음성 안내 재생 중 오류:', error);\n    }\n  };\n\n  // 입력 필드 변경 핸들러\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // 음성 입력 시작\n  const handleVoiceStart = async fieldName => {\n    setIsVoiceMode(true);\n    try {\n      await startRecording();\n      checkSilence(async audioBlob => {\n        const text = await voiceService.speechToText(audioBlob);\n        if (text) {\n          setFormData(prev => ({\n            ...prev,\n            [fieldName]: text\n          }));\n        }\n        setIsVoiceMode(false);\n      });\n    } catch (error) {\n      console.error('음성 입력 에러:', error);\n      setIsVoiceMode(false);\n    }\n  };\n\n  // handleConfirm 함수 수정\n  const handleConfirm = async step => {\n    if (!completedSteps.includes(step)) {\n      setCompletedSteps(prev => [...prev, step]);\n      setCurrentStep(step + 1);\n\n      // 다음 섹션으로 스크롤 - sectionsRef 활용\n      setTimeout(() => {\n        if (sectionsRef.current[step + 1]) {\n          sectionsRef.current[step + 1].scrollIntoView({\n            behavior: 'smooth',\n            block: 'start',\n            inline: 'nearest'\n          });\n        }\n      }, 100);\n\n      // 다음 단계의 음성 안내 재생\n      if (step + 1 <= 4) {\n        // 마지막 단계 체크\n        await speak(step + 1);\n      }\n    }\n  };\n\n  // 질문 텍스트 가져오기\n  const getQuestionForStep = step => {\n    switch (step) {\n      case 1:\n        return \"이름이 어떻게 되세요?\";\n      case 2:\n        return \"나이가 어떻게 되세요?\";\n      case 3:\n        return \"전화번호가 어떻게 되세요?\";\n      case 4:\n        return \"어디 사세요?\";\n      default:\n        return \"\";\n    }\n  };\n\n  // 나이 선택을 위한 버튼 그룹 컴포넌트\n  const AgeButtonGroup = ({\n    value,\n    onChange,\n    disabled\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hmk-age-buttons\",\n    children: ['50대', '60대', '70대', '80대', '90대 이상'].map(age => /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: `hmk-age-button ${value === age ? 'selected' : ''}`,\n      onClick: () => onChange('age', age),\n      disabled: disabled,\n      children: age\n    }, age, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 9\n  }, this);\n\n  // 각 섹션 컴포넌트\n  const Section = ({\n    step,\n    question,\n    field,\n    value,\n    onChange,\n    onConfirm,\n    isCompleted\n  }) => {\n    _s();\n    const sectionRef = useRef(null);\n    const [isListening, setIsListening] = useState(false);\n    useEffect(() => {\n      sectionsRef.current[step] = sectionRef.current;\n    }, [step]);\n    const handleVoiceInput = async () => {\n      if (isProcessing) return;\n      try {\n        setIsListening(true);\n\n        // 주소 필드인 경우\n        if (field === 'address') {\n          await handleVoiceStart('address');\n        } else {\n          await handleVoiceStart(field);\n        }\n      } catch (error) {\n        console.error('음성 입력 오류:', error);\n      } finally {\n        setIsListening(false);\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: sectionRef,\n      className: `hmk-sequence-section ${isCompleted ? 'completed' : ''} ${currentStep === step ? 'active' : ''}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hmk-sequence-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"hmk-sequence-question\",\n          children: question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this), field === 'age' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hmk-input-container\",\n          children: /*#__PURE__*/_jsxDEV(AgeButtonGroup, {\n            value: value,\n            onChange: onChange,\n            disabled: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hmk-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: field === 'phone' ? 'tel' : 'text',\n            className: `hmk-sequence-input ${isCompleted ? 'completed' : ''}`,\n            value: value,\n            onChange: e => onChange(field, e.target.value),\n            disabled: false,\n            placeholder: field === 'phone' ? '전화번호를 말씀해주세요' : field === 'address' ? '주소를 말씀해주세요' : '말씀해주세요'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `hmk-voice-button ${isListening ? 'listening' : ''}`,\n            onClick: handleVoiceInput,\n            disabled: isProcessing,\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faMicrophone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hmk-confirm-button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `hmk-confirm-button ${!value ? 'disabled' : ''}`,\n            onClick: () => onConfirm(step),\n            disabled: !value,\n            children: \"\\uD655\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }, this);\n  };\n\n  // 컴포넌트 마운트 시 첫 번째 안내 음성 재생\n  _s(Section, \"g9zDcuTsvn+lrdSpk22q87KiVpM=\");\n  useEffect(() => {\n    localStorage.removeItem('resumeFormData');\n    speak(1); // 첫 번째 질문 재생\n    return () => {\n      localStorage.removeItem('resumeFormData');\n    };\n  }, []);\n\n  // 프로그레스바 컴포넌트 수정\n  const steps = [{\n    label: \"이름\",\n    step: 1\n  }, {\n    label: \"나이\",\n    step: 2\n  }, {\n    label: \"전화번호\",\n    step: 3\n  }, {\n    label: \"주소\",\n    step: 4\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hmk-sequence-container\",\n    onSubmit: e => e.preventDefault(),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hmk-sequence-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"hmk-back-button\",\n        onClick: () => navigate(-1),\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faArrowLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hmk-progress-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hmk-progress-track\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hmk-progress-fill\",\n            style: {\n              width: `${completedSteps.length / (steps.length - 1) * 100}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hmk-progress-steps\",\n          children: steps.map((step, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `hmk-step ${completedSteps.includes(step.step) ? 'completed' : currentStep === step.step ? 'active' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"hmk-step-circle\",\n              children: completedSteps.includes(step.step) ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faCheck\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 41\n              }, this) : step.step\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"hmk-step-label\",\n              children: step.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 33\n            }, this)]\n          }, step.step, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hmk-sections-container\",\n      children: [/*#__PURE__*/_jsxDEV(Section, {\n        step: 1,\n        question: \"\\uC774\\uB984\\uC774 \\uC5B4\\uB5BB\\uAC8C \\uB418\\uC138\\uC694?\",\n        field: \"name\",\n        value: formData.name,\n        onChange: handleInputChange,\n        onConfirm: handleConfirm,\n        isCompleted: completedSteps.includes(1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 17\n      }, this), completedSteps.includes(1) && /*#__PURE__*/_jsxDEV(Section, {\n        step: 2,\n        question: \"\\uB098\\uC774\\uAC00 \\uC5B4\\uB5BB\\uAC8C \\uB418\\uC138\\uC694?\",\n        field: \"age\",\n        value: formData.age,\n        onChange: handleInputChange,\n        onConfirm: handleConfirm,\n        isCompleted: completedSteps.includes(2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 21\n      }, this), completedSteps.includes(2) && /*#__PURE__*/_jsxDEV(Section, {\n        step: 3,\n        question: \"\\uC804\\uD654\\uBC88\\uD638\\uAC00 \\uC5B4\\uB5BB\\uAC8C \\uB418\\uC138\\uC694?\",\n        field: \"phone\",\n        value: formData.phone,\n        onChange: handleInputChange,\n        onConfirm: handleConfirm,\n        isCompleted: completedSteps.includes(3)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 21\n      }, this), completedSteps.includes(3) && /*#__PURE__*/_jsxDEV(Section, {\n        step: 4,\n        question: \"\\uC5B4\\uB514 \\uC0AC\\uC138\\uC694?\",\n        field: \"address\",\n        value: formData.address,\n        onChange: handleInputChange,\n        onConfirm: handleConfirm,\n        isCompleted: completedSteps.includes(4)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 13\n    }, this), isAllCompleted && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hmk-sequence-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"hmk-submit-button\",\n        onClick: handleSubmit,\n        children: \"\\uC81C\\uCD9C\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 263,\n    columnNumber: 9\n  }, this);\n};\n_s2(ResumeSequence, \"2e4MU9N12traHn7W5rb0u8shtJY=\", false, function () {\n  return [useNavigate, useVoiceRecording];\n});\n_c = ResumeSequence;\nexport default ResumeSequence;\nvar _c;\n$RefreshReg$(_c, \"ResumeSequence\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","FontAwesomeIcon","faMicrophone","faArrowLeft","faCheck","faArrowDown","voiceService","useVoiceRecording","axios","jsxDEV","_jsxDEV","audioGuides","ResumeSequence","_s2","_s","$RefreshSig$","navigate","currentStep","setCurrentStep","formData","setFormData","name","phone","address","job","isVoiceMode","setIsVoiceMode","completedSteps","setCompletedSteps","inputRef","sectionsRef","isRecording","startRecording","stopRecording","checkSilence","audioBlob","setAudioBlob","isProcessing","setIsProcessing","localStorage","setItem","JSON","stringify","isAllCompleted","length","handleSubmit","response","post","data","success","removeItem","error","console","speak","step","audioUrl","audio","Audio","Promise","resolve","onended","onerror","play","handleInputChange","e","value","target","prev","handleVoiceStart","fieldName","text","speechToText","handleConfirm","includes","setTimeout","current","scrollIntoView","behavior","block","inline","getQuestionForStep","AgeButtonGroup","onChange","disabled","className","children","map","age","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Section","question","field","onConfirm","isCompleted","sectionRef","isListening","setIsListening","handleVoiceInput","ref","placeholder","icon","steps","label","onSubmit","preventDefault","style","width","index","_c","$RefreshReg$"],"sources":["D:/dev/finalproj/react_finalproj/client/src/components/forms/ResumeSequence.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMicrophone, faArrowLeft, faCheck, faArrowDown } from '@fortawesome/free-solid-svg-icons';\r\nimport '../../assets/css/resumeSequence.css';\r\nimport { voiceService } from '../../api/voiceService';\r\nimport { useVoiceRecording } from '../../hooks/useVoiceRecording';\r\nimport axios from 'axios';\r\n\r\n// 미리 녹음된 안내 음성 파일 import\r\nconst audioGuides = {\r\n    1: '/static/audio/guides/name_question.mp3',    // \"이름이 어떻게 되세요?\"\r\n    2: '/static/audio/guides/age_question.mp3',     // \"나이가 어떻게 되세요?\"\r\n    3: '/static/audio/guides/phone_question.mp3',   // \"전화번호가 어떻게 되세요?\"\r\n    4: '/static/audio/guides/address_question.mp3'  // \"어디 사세요?\"\r\n};\r\n\r\nconst ResumeSequence = () => {\r\n    const navigate = useNavigate();\r\n    const [currentStep, setCurrentStep] = useState(0);\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        phone: '',\r\n        address: '',\r\n        job: ''\r\n    });\r\n    const [isVoiceMode, setIsVoiceMode] = useState(false);\r\n    const [completedSteps, setCompletedSteps] = useState([]);\r\n    const inputRef = useRef(null);\r\n    const sectionsRef = useRef([]);\r\n    const { isRecording, startRecording, stopRecording, checkSilence } = useVoiceRecording();\r\n    const [audioBlob, setAudioBlob] = useState(null);\r\n    const [isProcessing, setIsProcessing] = useState(false);\r\n\r\n    // 폼 데이터가 변경될 때마다 로컬 스토리지에 저장\r\n    useEffect(() => {\r\n        localStorage.setItem('resumeFormData', JSON.stringify(formData));\r\n    }, [formData]);\r\n\r\n    // 모든 단계가 완료되었는지 확인\r\n    const isAllCompleted = completedSteps.length === 4;\r\n\r\n    // 폼 제출 처리\r\n    const handleSubmit = async () => {\r\n        try {\r\n            // 서버로 데이터 전송\r\n            const response = await axios.post('http://localhost:8000/api/voice/resume', formData);\r\n            if (response.data.success) {\r\n                // 성공 시 로컬 스토리지 클리어\r\n                localStorage.removeItem('resumeFormData');\r\n                // 다음 페이지로 이동\r\n                navigate('/success');\r\n            }\r\n        } catch (error) {\r\n            console.error('폼 제출 중 오류:', error);\r\n        }\r\n    };\r\n\r\n    // TTS 함수 수정\r\n    const speak = async (step) => {\r\n        try {\r\n            const audioUrl = `http://localhost:8000${audioGuides[step]}`;\r\n            const audio = new Audio(audioUrl);\r\n            \r\n            return new Promise((resolve) => {\r\n                audio.onended = () => resolve();\r\n                audio.onerror = () => {\r\n                    console.error('오디오 재생 중 오류');\r\n                    resolve();\r\n                };\r\n                audio.play();\r\n            });\r\n        } catch (error) {\r\n            console.error('음성 안내 재생 중 오류:', error);\r\n        }\r\n    };\r\n\r\n    // 입력 필드 변경 핸들러\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            [name]: value\r\n        }));\r\n    };\r\n\r\n    // 음성 입력 시작\r\n    const handleVoiceStart = async (fieldName) => {\r\n        setIsVoiceMode(true);\r\n        try {\r\n            await startRecording();\r\n            checkSilence(async (audioBlob) => {\r\n                const text = await voiceService.speechToText(audioBlob);\r\n                if (text) {\r\n                    setFormData(prev => ({\r\n                        ...prev,\r\n                        [fieldName]: text\r\n                    }));\r\n                }\r\n                setIsVoiceMode(false);\r\n            });\r\n        } catch (error) {\r\n            console.error('음성 입력 에러:', error);\r\n            setIsVoiceMode(false);\r\n        }\r\n    };\r\n\r\n    // handleConfirm 함수 수정\r\n    const handleConfirm = async (step) => {\r\n        if (!completedSteps.includes(step)) {\r\n            setCompletedSteps(prev => [...prev, step]);\r\n            setCurrentStep(step + 1);\r\n            \r\n            // 다음 섹션으로 스크롤 - sectionsRef 활용\r\n            setTimeout(() => {\r\n                if (sectionsRef.current[step + 1]) {\r\n                    sectionsRef.current[step + 1].scrollIntoView({\r\n                        behavior: 'smooth',\r\n                        block: 'start',\r\n                        inline: 'nearest'\r\n                    });\r\n                }\r\n            }, 100);\r\n\r\n            // 다음 단계의 음성 안내 재생\r\n            if (step + 1 <= 4) {  // 마지막 단계 체크\r\n                await speak(step + 1);\r\n            }\r\n        }\r\n    };\r\n\r\n    // 질문 텍스트 가져오기\r\n    const getQuestionForStep = (step) => {\r\n        switch (step) {\r\n            case 1:\r\n                return \"이름이 어떻게 되세요?\";\r\n            case 2:\r\n                return \"나이가 어떻게 되세요?\";\r\n            case 3:\r\n                return \"전화번호가 어떻게 되세요?\";\r\n            case 4:\r\n                return \"어디 사세요?\";\r\n            default:\r\n                return \"\";\r\n        }\r\n    };\r\n\r\n    // 나이 선택을 위한 버튼 그룹 컴포넌트\r\n    const AgeButtonGroup = ({ value, onChange, disabled }) => (\r\n        <div className=\"hmk-age-buttons\">\r\n            {['50대', '60대', '70대', '80대', '90대 이상'].map((age) => (\r\n                <button\r\n                    key={age}\r\n                    type=\"button\"\r\n                    className={`hmk-age-button ${value === age ? 'selected' : ''}`}\r\n                    onClick={() => onChange('age', age)}\r\n                    disabled={disabled}\r\n                >\r\n                    {age}\r\n                </button>\r\n            ))}\r\n        </div>\r\n    );\r\n\r\n    // 각 섹션 컴포넌트\r\n    const Section = ({ step, question, field, value, onChange, onConfirm, isCompleted }) => {\r\n        const sectionRef = useRef(null);\r\n        const [isListening, setIsListening] = useState(false);\r\n\r\n        useEffect(() => {\r\n            sectionsRef.current[step] = sectionRef.current;\r\n        }, [step]);\r\n\r\n        const handleVoiceInput = async () => {\r\n            if (isProcessing) return;\r\n            \r\n            try {\r\n                setIsListening(true);\r\n                \r\n                // 주소 필드인 경우\r\n                if (field === 'address') {\r\n                    await handleVoiceStart('address');\r\n                } else {\r\n                    await handleVoiceStart(field);\r\n                }\r\n                \r\n            } catch (error) {\r\n                console.error('음성 입력 오류:', error);\r\n            } finally {\r\n                setIsListening(false);\r\n            }\r\n        };\r\n\r\n        return (\r\n            <div \r\n                ref={sectionRef}\r\n                className={`hmk-sequence-section ${isCompleted ? 'completed' : ''} ${currentStep === step ? 'active' : ''}`}\r\n            >\r\n                <div className=\"hmk-sequence-content\">\r\n                    <h2 className=\"hmk-sequence-question\">\r\n                        {question}\r\n                    </h2>\r\n                    {field === 'age' ? (\r\n                        <div className=\"hmk-input-container\">\r\n                            <AgeButtonGroup \r\n                                value={value}\r\n                                onChange={onChange}\r\n                                disabled={false}\r\n                            />\r\n                        </div>\r\n                    ) : (\r\n                        <div className=\"hmk-input-container\">\r\n                            <input\r\n                                type={field === 'phone' ? 'tel' : 'text'}\r\n                                className={`hmk-sequence-input ${isCompleted ? 'completed' : ''}`}\r\n                                value={value}\r\n                                onChange={(e) => onChange(field, e.target.value)}\r\n                                disabled={false}\r\n                                placeholder={field === 'phone' ? '전화번호를 말씀해주세요' : \r\n                                           field === 'address' ? '주소를 말씀해주세요' : '말씀해주세요'}\r\n                            />\r\n                            <button \r\n                                className={`hmk-voice-button ${isListening ? 'listening' : ''}`}\r\n                                onClick={handleVoiceInput}\r\n                                disabled={isProcessing}\r\n                            >\r\n                                <FontAwesomeIcon icon={faMicrophone} />\r\n                            </button>\r\n                        </div>\r\n                    )}\r\n                    <div className=\"hmk-confirm-button-container\">\r\n                        <button \r\n                            className={`hmk-confirm-button ${!value ? 'disabled' : ''}`}\r\n                            onClick={() => onConfirm(step)}\r\n                            disabled={!value}\r\n                        >\r\n                            확인\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    // 컴포넌트 마운트 시 첫 번째 안내 음성 재생\r\n    useEffect(() => {\r\n        localStorage.removeItem('resumeFormData');\r\n        speak(1);  // 첫 번째 질문 재생\r\n        return () => {\r\n            localStorage.removeItem('resumeFormData');\r\n        };\r\n    }, []);\r\n\r\n    // 프로그레스바 컴포넌트 수정\r\n    const steps = [\r\n        { label: \"이름\", step: 1 },\r\n        { label: \"나이\", step: 2 },\r\n        { label: \"전화번호\", step: 3 },\r\n        { label: \"주소\", step: 4 }\r\n    ];\r\n\r\n    return (\r\n        <div \r\n            className=\"hmk-sequence-container\"\r\n            onSubmit={e => e.preventDefault()}\r\n        >\r\n            <div className=\"hmk-sequence-header\">\r\n                <button \r\n                    className=\"hmk-back-button\"\r\n                    onClick={() => navigate(-1)}\r\n                >\r\n                    <FontAwesomeIcon icon={faArrowLeft} />\r\n                </button>\r\n                <div className=\"hmk-progress-bar\">\r\n                    <div className=\"hmk-progress-track\">\r\n                        <div \r\n                            className=\"hmk-progress-fill\"\r\n                            style={{ width: `${((completedSteps.length) / (steps.length - 1)) * 100}%` }}\r\n                        ></div>\r\n                    </div>\r\n                    <div className=\"hmk-progress-steps\">\r\n                        {steps.map((step, index) => (\r\n                            <div \r\n                                key={step.step}\r\n                                className={`hmk-step ${\r\n                                    completedSteps.includes(step.step) ? 'completed' : \r\n                                    currentStep === step.step ? 'active' : ''\r\n                                }`}\r\n                            >\r\n                                <div className=\"hmk-step-circle\">\r\n                                    {completedSteps.includes(step.step) ? \r\n                                        <FontAwesomeIcon icon={faCheck} /> : \r\n                                        step.step\r\n                                    }\r\n                                </div>\r\n                                <span className=\"hmk-step-label\">{step.label}</span>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"hmk-sections-container\">\r\n                <Section \r\n                    step={1}\r\n                    question=\"이름이 어떻게 되세요?\"\r\n                    field=\"name\"\r\n                    value={formData.name}\r\n                    onChange={handleInputChange}\r\n                    onConfirm={handleConfirm}\r\n                    isCompleted={completedSteps.includes(1)}\r\n                />\r\n                {completedSteps.includes(1) && (\r\n                    <Section \r\n                        step={2}\r\n                        question=\"나이가 어떻게 되세요?\"\r\n                        field=\"age\"\r\n                        value={formData.age}\r\n                        onChange={handleInputChange}\r\n                        onConfirm={handleConfirm}\r\n                        isCompleted={completedSteps.includes(2)}\r\n                    />\r\n                )}\r\n                {completedSteps.includes(2) && (\r\n                    <Section \r\n                        step={3}\r\n                        question=\"전화번호가 어떻게 되세요?\"\r\n                        field=\"phone\"\r\n                        value={formData.phone}\r\n                        onChange={handleInputChange}\r\n                        onConfirm={handleConfirm}\r\n                        isCompleted={completedSteps.includes(3)}\r\n                    />\r\n                )}\r\n                {completedSteps.includes(3) && (\r\n                    <Section \r\n                        step={4}\r\n                        question=\"어디 사세요?\"\r\n                        field=\"address\"\r\n                        value={formData.address}\r\n                        onChange={handleInputChange}\r\n                        onConfirm={handleConfirm}\r\n                        isCompleted={completedSteps.includes(4)}\r\n                    />\r\n                )}\r\n            </div>\r\n\r\n            {/* 모든 단계가 완료되면 제출 버튼 표시 */}\r\n            {isAllCompleted && (\r\n                <div className=\"hmk-sequence-footer\">\r\n                    <button \r\n                        className=\"hmk-submit-button\"\r\n                        onClick={handleSubmit}\r\n                    >\r\n                        제출하기\r\n                    </button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ResumeSequence; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}