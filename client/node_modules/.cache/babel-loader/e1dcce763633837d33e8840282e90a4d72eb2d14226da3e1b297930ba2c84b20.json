{"ast":null,"code":"var _jsxFileName = \"D:\\\\dev\\\\finalproj\\\\react_finalproj\\\\src\\\\components\\\\ResumeTemplate.jsx\";\nimport { PDFDocument } from 'pdf-lib';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResumeTemplate = ({\n  formData\n}) => {\n  const fillPdfForm = async () => {\n    try {\n      // 원본 PDF 파일 로드 (public 폴더에 있다고 가정)\n      const formUrl = '/seniorjobhelper.pdf';\n      const formPdfBytes = await fetch(formUrl).then(res => res.arrayBuffer());\n\n      // 새로운 PDF 문서 생성\n      const pdfDoc = await PDFDocument.load(formPdfBytes);\n\n      // 첫 페이지 가져오기\n      const page = pdfDoc.getPages()[0];\n\n      // 데이터 입력\n      // 기본 정보\n      page.drawText(formData.name, {\n        x: 150,\n        y: 700\n      });\n      page.drawText(`${formData.residentNumber1}-${formData.residentNumber2}`, {\n        x: 150,\n        y: 680\n      });\n      page.drawText(formData.address, {\n        x: 150,\n        y: 660\n      });\n      page.drawText(formData.mobilePhone, {\n        x: 450,\n        y: 700\n      });\n\n      // 체크박스 표시 (위치는 실제 PDF에 맞게 조정 필요)\n      // 최종학력\n      if (formData.education) {\n        const educationY = 620;\n        const educationPositions = {\n          '무학': 100,\n          '초졸': 180,\n          '중졸': 260,\n          '고졸': 340,\n          '전문대졸': 420,\n          '대졸이상': 500\n        };\n        page.drawText('■', {\n          x: educationPositions[formData.education],\n          y: educationY\n        });\n      }\n\n      // 다른 체크박스들도 비슷한 방식으로 처리\n      // ...\n\n      // 새로운 PDF 파일로 저장\n      const pdfBytes = await pdfDoc.save();\n\n      // 브라우저에서 다운로드\n      const blob = new Blob([pdfBytes], {\n        type: 'application/pdf'\n      });\n      const url = window.URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = `${formData.name}_노인일자리신청서.pdf`;\n      link.click();\n\n      // 메모리 정리\n      window.URL.revokeObjectURL(url);\n    } catch (error) {\n      console.error('PDF 생성 중 오류 발생:', error);\n      alert('PDF 생성 중 오류가 발생했습니다.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: fillPdfForm,\n    className: \"hmk-button hmk-download-button\",\n    children: \"\\uC2E0\\uCCAD\\uC11C \\uB2E4\\uC6B4\\uB85C\\uB4DC\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_c = ResumeTemplate;\nexport default ResumeTemplate;\nvar _c;\n$RefreshReg$(_c, \"ResumeTemplate\");","map":{"version":3,"names":["PDFDocument","jsxDEV","_jsxDEV","ResumeTemplate","formData","fillPdfForm","formUrl","formPdfBytes","fetch","then","res","arrayBuffer","pdfDoc","load","page","getPages","drawText","name","x","y","residentNumber1","residentNumber2","address","mobilePhone","education","educationY","educationPositions","pdfBytes","save","blob","Blob","type","url","window","URL","createObjectURL","link","document","createElement","href","download","click","revokeObjectURL","error","console","alert","onClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/dev/finalproj/react_finalproj/src/components/ResumeTemplate.jsx"],"sourcesContent":["import { PDFDocument } from 'pdf-lib';\r\n\r\nconst ResumeTemplate = ({ formData }) => {\r\n  const fillPdfForm = async () => {\r\n    try {\r\n      // 원본 PDF 파일 로드 (public 폴더에 있다고 가정)\r\n      const formUrl = '/seniorjobhelper.pdf';\r\n      const formPdfBytes = await fetch(formUrl).then(res => res.arrayBuffer());\r\n      \r\n      // 새로운 PDF 문서 생성\r\n      const pdfDoc = await PDFDocument.load(formPdfBytes);\r\n      \r\n      // 첫 페이지 가져오기\r\n      const page = pdfDoc.getPages()[0];\r\n      \r\n      // 데이터 입력\r\n      // 기본 정보\r\n      page.drawText(formData.name, { x: 150, y: 700 });\r\n      page.drawText(`${formData.residentNumber1}-${formData.residentNumber2}`, { x: 150, y: 680 });\r\n      page.drawText(formData.address, { x: 150, y: 660 });\r\n      page.drawText(formData.mobilePhone, { x: 450, y: 700 });\r\n      \r\n      // 체크박스 표시 (위치는 실제 PDF에 맞게 조정 필요)\r\n      // 최종학력\r\n      if (formData.education) {\r\n        const educationY = 620;\r\n        const educationPositions = {\r\n          '무학': 100,\r\n          '초졸': 180,\r\n          '중졸': 260,\r\n          '고졸': 340,\r\n          '전문대졸': 420,\r\n          '대졸이상': 500\r\n        };\r\n        page.drawText('■', { x: educationPositions[formData.education], y: educationY });\r\n      }\r\n\r\n      // 다른 체크박스들도 비슷한 방식으로 처리\r\n      // ...\r\n\r\n      // 새로운 PDF 파일로 저장\r\n      const pdfBytes = await pdfDoc.save();\r\n      \r\n      // 브라우저에서 다운로드\r\n      const blob = new Blob([pdfBytes], { type: 'application/pdf' });\r\n      const url = window.URL.createObjectURL(blob);\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.download = `${formData.name}_노인일자리신청서.pdf`;\r\n      link.click();\r\n      \r\n      // 메모리 정리\r\n      window.URL.revokeObjectURL(url);\r\n    } catch (error) {\r\n      console.error('PDF 생성 중 오류 발생:', error);\r\n      alert('PDF 생성 중 오류가 발생했습니다.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button onClick={fillPdfForm} className=\"hmk-button hmk-download-button\">\r\n      신청서 다운로드\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ResumeTemplate; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}