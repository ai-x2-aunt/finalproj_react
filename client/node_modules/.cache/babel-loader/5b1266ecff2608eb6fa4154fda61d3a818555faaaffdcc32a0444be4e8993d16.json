{"ast":null,"code":"import axios from 'axios';\nconst BASE_URL = 'http://localhost:8000'; // FastAPI 서버 주소\n\nexport const voiceService = {\n  // TTS 기능 (로컬 Kokoro 모델)\n  textToSpeech: async text => {\n    try {\n      const response = await axios.post(`${BASE_URL}/api/tts`, {\n        text\n      });\n      return response.data.audioUrl;\n    } catch (error) {\n      console.error('TTS 에러:', error);\n      throw error;\n    }\n  },\n  // STT 기능 (로컬 Whisper 모델)\n  speechToText: async audioBlob => {\n    try {\n      const formData = new FormData();\n      formData.append('audio', audioBlob);\n      const response = await axios.post(`${BASE_URL}/api/stt`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      return response.data.text;\n    } catch (error) {\n      console.error('STT 에러:', error);\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["axios","BASE_URL","voiceService","textToSpeech","text","response","post","data","audioUrl","error","console","speechToText","audioBlob","formData","FormData","append","headers"],"sources":["D:/dev/finalproj/react_finalproj/client/src/api/voiceService.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'http://localhost:8000';  // FastAPI 서버 주소\n\nexport const voiceService = {\n    // TTS 기능 (로컬 Kokoro 모델)\n    textToSpeech: async (text) => {\n        try {\n            const response = await axios.post(`${BASE_URL}/api/tts`, { text });\n            return response.data.audioUrl;\n        } catch (error) {\n            console.error('TTS 에러:', error);\n            throw error;\n        }\n    },\n\n    // STT 기능 (로컬 Whisper 모델)\n    speechToText: async (audioBlob) => {\n        try {\n            const formData = new FormData();\n            formData.append('audio', audioBlob);\n\n            const response = await axios.post(`${BASE_URL}/api/stt`, formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                }\n            });\n            return response.data.text;\n        } catch (error) {\n            console.error('STT 에러:', error);\n            throw error;\n        }\n    }\n}; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,uBAAuB,CAAC,CAAE;;AAE3C,OAAO,MAAMC,YAAY,GAAG;EACxB;EACAC,YAAY,EAAE,MAAOC,IAAI,IAAK;IAC1B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,GAAGL,QAAQ,UAAU,EAAE;QAAEG;MAAK,CAAC,CAAC;MAClE,OAAOC,QAAQ,CAACE,IAAI,CAACC,QAAQ;IACjC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;MAC/B,MAAMA,KAAK;IACf;EACJ,CAAC;EAED;EACAE,YAAY,EAAE,MAAOC,SAAS,IAAK;IAC/B,IAAI;MACA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEH,SAAS,CAAC;MAEnC,MAAMP,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,GAAGL,QAAQ,UAAU,EAAEY,QAAQ,EAAE;QAC/DG,OAAO,EAAE;UACL,cAAc,EAAE;QACpB;MACJ,CAAC,CAAC;MACF,OAAOX,QAAQ,CAACE,IAAI,CAACH,IAAI;IAC7B,CAAC,CAAC,OAAOK,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;MAC/B,MAAMA,KAAK;IACf;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}