{"ast":null,"code":"var _jsxFileName = \"D:\\\\dev\\\\finalproj\\\\react_finalproj\\\\src\\\\components\\\\ResumeTemplate.jsx\",\n  _s = $RefreshSig$();\nimport { PDFDocument, rgb, StandardFonts } from 'pdf-lib';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResumeTemplate = ({\n  formData\n}) => {\n  _s();\n  const [pdfUrl, setPdfUrl] = useState(null);\n  const fillPdfForm = async () => {\n    try {\n      // PDF 템플릿 파일 로드\n      const formUrl = '/seniorjobhelper.pdf';\n      const existingPdfBytes = await fetch(formUrl).then(res => res.arrayBuffer());\n\n      // PDF 문서 로드\n      const pdfDoc = await PDFDocument.load(existingPdfBytes, {\n        updateMetadata: false // 메타데이터 업데이트 비활성화\n      });\n\n      // 첫 페이지 가져오기\n      const page = pdfDoc.getPages()[0];\n\n      // 폰트 설정\n      const helveticaFont = await pdfDoc.embedFont(StandardFonts.Helvetica);\n\n      // 기본 텍스트 스타일\n      const textOptions = {\n        font: helveticaFont,\n        size: 10,\n        color: rgb(0, 0, 0)\n      };\n\n      // 기본 정보\n      page.drawText(formData.name, {\n        x: 162,\n        y: 842 - 215,\n        ...textOptions\n      });\n      page.drawText(`${formData.residentNumber1}-${formData.residentNumber2}`, {\n        x: 150,\n        y: 842 - 261,\n        ...textOptions\n      });\n      page.drawText(formData.address, {\n        x: 164,\n        y: 842 - 290,\n        ...textOptions\n      });\n      page.drawText(formData.mobilePhone, {\n        x: 319,\n        y: 842 - 215,\n        ...textOptions\n      });\n\n      // 최종학력\n      if (formData.education) {\n        const educationX = {\n          '무학': 67,\n          '초졸': 120,\n          '중졸': 180,\n          '고졸': 240,\n          '전문대졸': 300,\n          '대졸이상': 360\n        };\n        page.drawText('■', {\n          x: educationX[formData.education],\n          y: 842 - 321,\n          ...textOptions\n        });\n      }\n\n      // 세대구성 형태\n      if (formData.householdType) {\n        const householdX = {\n          '독신': 62,\n          '가족동거(노부모,손자녀,장애인)': 140,\n          '노인부부': 220,\n          '가족동거(경제능력가족)': 300,\n          '기타': 380\n        };\n        page.drawText('■', {\n          x: householdX[formData.householdType],\n          y: 842 - 354,\n          ...textOptions\n        });\n      }\n\n      // 동거가족 정보\n      const familyCount = (formData.spouse ? 1 : 0) + (formData.childrenCount || 0) + (formData.grandchildrenCount || 0);\n      if (familyCount > 0) {\n        page.drawText(`${familyCount}명`, {\n          x: 67,\n          y: 842 - 387,\n          ...textOptions\n        });\n        page.drawText(`(배우자: ${formData.spouse ? '1' : '0'}, 자녀: ${formData.childrenCount || '0'}, 손: ${formData.grandchildrenCount || '0'})`, {\n          x: 120,\n          y: 842 - 387,\n          ...textOptions\n        });\n      }\n\n      // 일자리사업 참여경력\n      if (!formData.workExperience.isNew) {\n        page.drawText('■', {\n          x: 50,\n          y: 842 - 419,\n          ...textOptions\n        });\n      }\n\n      // 건강상태\n      const healthY = 460;\n      const healthPositions = {\n        '매우건강': 100,\n        '건강': 180,\n        '보통': 260,\n        '나쁨': 340,\n        '매우나쁨': 420\n      };\n      if (formData.healthStatus) {\n        page.drawText('■', {\n          x: healthPositions[formData.healthStatus],\n          y: healthY,\n          ...textOptions\n        });\n      }\n\n      // 희망 직종\n      if (formData.desiredPrograms.first) {\n        page.drawText(formData.desiredPrograms.first, {\n          x: 120,\n          y: 420,\n          ...textOptions\n        });\n      }\n      if (formData.desiredPrograms.second) {\n        page.drawText(formData.desiredPrograms.second, {\n          x: 120,\n          y: 400,\n          ...textOptions\n        });\n      }\n      if (formData.desiredPrograms.third) {\n        page.drawText(formData.desiredPrograms.third, {\n          x: 120,\n          y: 380,\n          ...textOptions\n        });\n      }\n\n      // 건강보험 직장가입자 여부\n      const insuranceY = 340;\n      if (formData.volunteerWork.healthInsurance === 'true') {\n        page.drawText('■', {\n          x: 100,\n          y: insuranceY,\n          ...textOptions\n        }); // 해당\n      } else {\n        page.drawText('■', {\n          x: 200,\n          y: insuranceY,\n          ...textOptions\n        }); // 비해당\n      }\n\n      // 신청 동기\n      if (formData.applicationMotives.length > 0) {\n        const motivesY = 300;\n        formData.applicationMotives.forEach((motive, index) => {\n          page.drawText('■', {\n            x: 100 + index * 80,\n            y: motivesY,\n            ...textOptions\n          });\n        });\n      }\n\n      // PDF 저장\n      const pdfBytes = await pdfDoc.saveAsBase64({\n        dataUri: true,\n        useObjectStreams: false // 객체 스트림 비활성화\n      });\n\n      // 새 창에서 PDF 열기\n      window.open(pdfBytes);\n\n      // 다운로드용 URL 생성\n      const byteCharacters = atob(pdfBytes.split(',')[1]);\n      const byteNumbers = new Array(byteCharacters.length);\n      for (let i = 0; i < byteCharacters.length; i++) {\n        byteNumbers[i] = byteCharacters.charCodeAt(i);\n      }\n      const byteArray = new Uint8Array(byteNumbers);\n      const blob = new Blob([byteArray], {\n        type: 'application/pdf'\n      });\n      const url = URL.createObjectURL(blob);\n      setPdfUrl(url);\n    } catch (error) {\n      console.error('PDF 생성 중 오류 발생:', error);\n      alert('PDF 생성 중 오류가 발생했습니다.');\n    }\n  };\n  const handleDownload = () => {\n    if (pdfUrl) {\n      const link = document.createElement('a');\n      link.href = pdfUrl;\n      link.download = `${formData.name}_노인일자리신청서.pdf`;\n      link.click();\n\n      // URL 정리\n      URL.revokeObjectURL(pdfUrl);\n      setPdfUrl(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pdf-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fillPdfForm,\n      className: \"hmk-button hmk-preview-button\",\n      children: \"\\uC2E0\\uCCAD\\uC11C \\uBBF8\\uB9AC\\uBCF4\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), pdfUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pdf-viewer\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDownload,\n        className: \"hmk-button hmk-download-button\",\n        children: \"PDF \\uB2E4\\uC6B4\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n};\n_s(ResumeTemplate, \"88RKqrlqdjaMuC5FCrS0b8qtccw=\");\n_c = ResumeTemplate;\nexport default ResumeTemplate;\nvar _c;\n$RefreshReg$(_c, \"ResumeTemplate\");","map":{"version":3,"names":["PDFDocument","rgb","StandardFonts","useState","jsxDEV","_jsxDEV","ResumeTemplate","formData","_s","pdfUrl","setPdfUrl","fillPdfForm","formUrl","existingPdfBytes","fetch","then","res","arrayBuffer","pdfDoc","load","updateMetadata","page","getPages","helveticaFont","embedFont","Helvetica","textOptions","font","size","color","drawText","name","x","y","residentNumber1","residentNumber2","address","mobilePhone","education","educationX","householdType","householdX","familyCount","spouse","childrenCount","grandchildrenCount","workExperience","isNew","healthY","healthPositions","healthStatus","desiredPrograms","first","second","third","insuranceY","volunteerWork","healthInsurance","applicationMotives","length","motivesY","forEach","motive","index","pdfBytes","saveAsBase64","dataUri","useObjectStreams","window","open","byteCharacters","atob","split","byteNumbers","Array","i","charCodeAt","byteArray","Uint8Array","blob","Blob","type","url","URL","createObjectURL","error","console","alert","handleDownload","link","document","createElement","href","download","click","revokeObjectURL","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/dev/finalproj/react_finalproj/src/components/ResumeTemplate.jsx"],"sourcesContent":["import { PDFDocument, rgb, StandardFonts } from 'pdf-lib';\r\nimport { useState } from 'react';\r\n\r\nconst ResumeTemplate = ({ formData }) => {\r\n  const [pdfUrl, setPdfUrl] = useState(null);\r\n\r\n  const fillPdfForm = async () => {\r\n    try {\r\n      // PDF 템플릿 파일 로드\r\n      const formUrl = '/seniorjobhelper.pdf';\r\n      const existingPdfBytes = await fetch(formUrl).then(res => res.arrayBuffer());\r\n      \r\n      // PDF 문서 로드\r\n      const pdfDoc = await PDFDocument.load(existingPdfBytes, { \r\n        updateMetadata: false // 메타데이터 업데이트 비활성화\r\n      });\r\n\r\n      // 첫 페이지 가져오기\r\n      const page = pdfDoc.getPages()[0];\r\n      \r\n      // 폰트 설정\r\n      const helveticaFont = await pdfDoc.embedFont(StandardFonts.Helvetica);\r\n      \r\n      // 기본 텍스트 스타일\r\n      const textOptions = {\r\n        font: helveticaFont,\r\n        size: 10,\r\n        color: rgb(0, 0, 0)\r\n      };\r\n\r\n      // 기본 정보\r\n      page.drawText(formData.name, { x: 162, y: 842 - 215, ...textOptions });\r\n      page.drawText(`${formData.residentNumber1}-${formData.residentNumber2}`, \r\n        { x: 150, y: 842 - 261, ...textOptions });\r\n      page.drawText(formData.address, { x: 164, y: 842 - 290, ...textOptions });\r\n      page.drawText(formData.mobilePhone, { x: 319, y: 842 - 215, ...textOptions });\r\n\r\n      // 최종학력\r\n      if (formData.education) {\r\n        const educationX = {\r\n          '무학': 67,\r\n          '초졸': 120,\r\n          '중졸': 180,\r\n          '고졸': 240,\r\n          '전문대졸': 300,\r\n          '대졸이상': 360\r\n        };\r\n        page.drawText('■', { x: educationX[formData.education], y: 842 - 321, ...textOptions });\r\n      }\r\n\r\n      // 세대구성 형태\r\n      if (formData.householdType) {\r\n        const householdX = {\r\n          '독신': 62,\r\n          '가족동거(노부모,손자녀,장애인)': 140,\r\n          '노인부부': 220,\r\n          '가족동거(경제능력가족)': 300,\r\n          '기타': 380\r\n        };\r\n        page.drawText('■', { x: householdX[formData.householdType], y: 842 - 354, ...textOptions });\r\n      }\r\n\r\n      // 동거가족 정보\r\n      const familyCount = (formData.spouse ? 1 : 0) + \r\n                         (formData.childrenCount || 0) + \r\n                         (formData.grandchildrenCount || 0);\r\n      if (familyCount > 0) {\r\n        page.drawText(`${familyCount}명`, { x: 67, y: 842 - 387, ...textOptions });\r\n        page.drawText(`(배우자: ${formData.spouse ? '1' : '0'}, 자녀: ${formData.childrenCount || '0'}, 손: ${formData.grandchildrenCount || '0'})`, \r\n          { x: 120, y: 842 - 387, ...textOptions });\r\n      }\r\n\r\n      // 일자리사업 참여경력\r\n      if (!formData.workExperience.isNew) {\r\n        page.drawText('■', { x: 50, y: 842 - 419, ...textOptions });\r\n      }\r\n\r\n      // 건강상태\r\n      const healthY = 460;\r\n      const healthPositions = {\r\n        '매우건강': 100,\r\n        '건강': 180,\r\n        '보통': 260,\r\n        '나쁨': 340,\r\n        '매우나쁨': 420\r\n      };\r\n      if (formData.healthStatus) {\r\n        page.drawText('■', { x: healthPositions[formData.healthStatus], y: healthY, ...textOptions });\r\n      }\r\n\r\n      // 희망 직종\r\n      if (formData.desiredPrograms.first) {\r\n        page.drawText(formData.desiredPrograms.first, { x: 120, y: 420, ...textOptions });\r\n      }\r\n      if (formData.desiredPrograms.second) {\r\n        page.drawText(formData.desiredPrograms.second, { x: 120, y: 400, ...textOptions });\r\n      }\r\n      if (formData.desiredPrograms.third) {\r\n        page.drawText(formData.desiredPrograms.third, { x: 120, y: 380, ...textOptions });\r\n      }\r\n\r\n      // 건강보험 직장가입자 여부\r\n      const insuranceY = 340;\r\n      if (formData.volunteerWork.healthInsurance === 'true') {\r\n        page.drawText('■', { x: 100, y: insuranceY, ...textOptions }); // 해당\r\n      } else {\r\n        page.drawText('■', { x: 200, y: insuranceY, ...textOptions }); // 비해당\r\n      }\r\n\r\n      // 신청 동기\r\n      if (formData.applicationMotives.length > 0) {\r\n        const motivesY = 300;\r\n        formData.applicationMotives.forEach((motive, index) => {\r\n          page.drawText('■', { x: 100 + (index * 80), y: motivesY, ...textOptions });\r\n        });\r\n      }\r\n\r\n      // PDF 저장\r\n      const pdfBytes = await pdfDoc.saveAsBase64({ \r\n        dataUri: true,\r\n        useObjectStreams: false // 객체 스트림 비활성화\r\n      });\r\n\r\n      // 새 창에서 PDF 열기\r\n      window.open(pdfBytes);\r\n      \r\n      // 다운로드용 URL 생성\r\n      const byteCharacters = atob(pdfBytes.split(',')[1]);\r\n      const byteNumbers = new Array(byteCharacters.length);\r\n      for (let i = 0; i < byteCharacters.length; i++) {\r\n        byteNumbers[i] = byteCharacters.charCodeAt(i);\r\n      }\r\n      const byteArray = new Uint8Array(byteNumbers);\r\n      const blob = new Blob([byteArray], { type: 'application/pdf' });\r\n      const url = URL.createObjectURL(blob);\r\n      \r\n      setPdfUrl(url);\r\n    } catch (error) {\r\n      console.error('PDF 생성 중 오류 발생:', error);\r\n      alert('PDF 생성 중 오류가 발생했습니다.');\r\n    }\r\n  };\r\n\r\n  const handleDownload = () => {\r\n    if (pdfUrl) {\r\n      const link = document.createElement('a');\r\n      link.href = pdfUrl;\r\n      link.download = `${formData.name}_노인일자리신청서.pdf`;\r\n      link.click();\r\n      \r\n      // URL 정리\r\n      URL.revokeObjectURL(pdfUrl);\r\n      setPdfUrl(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"pdf-container\">\r\n      <button onClick={fillPdfForm} className=\"hmk-button hmk-preview-button\">\r\n        신청서 미리보기\r\n      </button>\r\n      \r\n      {pdfUrl && (\r\n        <div className=\"pdf-viewer\">\r\n          <button onClick={handleDownload} className=\"hmk-button hmk-download-button\">\r\n            PDF 다운로드\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResumeTemplate; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}