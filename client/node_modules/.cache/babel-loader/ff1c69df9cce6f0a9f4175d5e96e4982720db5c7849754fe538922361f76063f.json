{"ast":null,"code":"var _jsxFileName = \"D:\\\\dev\\\\finalproj\\\\react_finalproj\\\\client\\\\src\\\\components\\\\forms\\\\ResumeSequence.jsx\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMicrophone, faArrowLeft, faCheck, faArrowDown } from '@fortawesome/free-solid-svg-icons';\nimport '../../assets/css/resumeSequence.css';\nimport { voiceService } from '../../api/voiceService';\nimport { useVoiceRecording } from '../../hooks/useVoiceRecording';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResumeSequence = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const navigate = useNavigate();\n  const [currentStep, setCurrentStep] = useState(1);\n  const [formData, setFormData] = useState(() => {\n    // 로컬 스토리지에서 기존 데이터 불러오기\n    const savedData = localStorage.getItem('resumeFormData');\n    return savedData ? JSON.parse(savedData) : {\n      name: '',\n      age: '',\n      phone: '',\n      address: ''\n    };\n  });\n  const [isListening, setIsListening] = useState(false);\n  const [completedSteps, setCompletedSteps] = useState([]);\n  const inputRef = useRef(null);\n  const sectionsRef = useRef([]);\n  const {\n    isRecording,\n    error,\n    startRecording,\n    checkSilence\n  } = useVoiceRecording();\n  const [audioBlob, setAudioBlob] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  // 폼 데이터가 변경될 때마다 로컬 스토리지에 저장\n  useEffect(() => {\n    localStorage.setItem('resumeFormData', JSON.stringify(formData));\n  }, [formData]);\n\n  // 모든 단계가 완료되었는지 확인\n  const isAllCompleted = completedSteps.length === 4;\n\n  // 폼 제출 처리\n  const handleSubmit = async () => {\n    try {\n      // 서버로 데이터 전송\n      const response = await axios.post('http://localhost:8000/api/resume', formData);\n      if (response.data.success) {\n        // 성공 시 로컬 스토리지 클리어\n        localStorage.removeItem('resumeFormData');\n        // 다음 페이지로 이동\n        navigate('/success');\n      }\n    } catch (error) {\n      console.error('폼 제출 중 오류:', error);\n    }\n  };\n\n  // TTS 기능 - 질문하기\n  const speak = async text => {\n    try {\n      console.log('TTS 요청 시작:', text);\n      const audioUrl = await voiceService.textToSpeech(text);\n      const fullUrl = `http://localhost:8000${audioUrl}`;\n\n      // 오디오 재생이 완료될 때까지 대기\n      return new Promise(resolve => {\n        const audio = new Audio(fullUrl);\n        audio.onended = () => resolve(); // 재생 완료 시 Promise 해결\n        audio.play().catch(error => {\n          console.error('오디오 재생 중 오류:', error);\n          resolve(); // 에러 발생해도 진행\n        });\n      });\n    } catch (error) {\n      console.error('TTS 실행 중 오류 발생:', error);\n    }\n  };\n\n  // STT 기능 - 답변 받기\n  const startListening = async field => {\n    if (isProcessing) return;\n    try {\n      setIsProcessing(true);\n      setIsListening(true);\n\n      // 주소 필드인 경우 handleVoiceInput 사용\n      if (field === 'address') {\n        await handleVoiceInput();\n        return;\n      }\n\n      // 전화번호 필드인 경우 더 긴 녹음 시간과 침묵 감지 시간 사용\n      const recordingTime = field === 'phone' ? 15000 : 5000; // 전화번호는 15초\n      const silenceThreshold = field === 'phone' ? 8000 : 5000; // 전화번호는 8초 침묵\n\n      // 다른 필드들은 기존 로직 사용\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      const mediaRecorder = new MediaRecorder(stream);\n      const audioChunks = [];\n      return new Promise((resolve, reject) => {\n        mediaRecorder.ondataavailable = event => {\n          audioChunks.push(event.data);\n        };\n        mediaRecorder.onstop = async () => {\n          const audioBlob = new Blob(audioChunks, {\n            type: 'audio/webm'\n          });\n          try {\n            const text = await voiceService.speechToText(audioBlob);\n            setFormData(prev => ({\n              ...prev,\n              [field]: text\n            }));\n            resolve();\n          } catch (error) {\n            console.error('음성 인식 오류:', error);\n            reject(error);\n          } finally {\n            setIsListening(false);\n            setIsProcessing(false);\n          }\n        };\n        mediaRecorder.start();\n\n        // 녹음 중지 타이머\n        setTimeout(() => {\n          if (mediaRecorder.state === 'recording') {\n            mediaRecorder.stop();\n          }\n        }, recordingTime);\n\n        // 침묵 감지 로직 추가\n        let lastAudioTime = Date.now();\n        const silenceCheck = setInterval(() => {\n          if (audioChunks.length > 0 && Date.now() - lastAudioTime > silenceThreshold) {\n            clearInterval(silenceCheck);\n            if (mediaRecorder.state === 'recording') {\n              mediaRecorder.stop();\n            }\n          }\n          if (audioChunks.length > 0) {\n            lastAudioTime = Date.now();\n          }\n        }, 1000);\n      });\n    } catch (error) {\n      console.error('음성 입력 오류:', error);\n      setIsListening(false);\n      setIsProcessing(false);\n    }\n  };\n\n  // 단계 진행 처리\n  const handleConfirm = async step => {\n    if (!completedSteps.includes(step)) {\n      setCompletedSteps(prev => [...prev, step]);\n      setCurrentStep(step + 1);\n\n      // 다음 섹션으로 스크롤\n      setTimeout(() => {\n        const nextSection = sectionsRef.current[step];\n        if (nextSection) {\n          nextSection.scrollIntoView({\n            behavior: 'smooth',\n            block: 'start'\n          });\n        }\n      }, 100);\n\n      // 다음 질문 읽어주기\n      const nextQuestion = getQuestionForStep(step + 1);\n      if (nextQuestion) {\n        await speak(nextQuestion); // 질문이 끝날 때까지 대기\n      }\n    }\n  };\n\n  // 질문 텍스트 가져오기\n  const getQuestionForStep = step => {\n    switch (step) {\n      case 1:\n        return \"이름이 어떻게 되세요?\";\n      case 2:\n        return \"나이가 어떻게 되세요?\";\n      case 3:\n        return \"전화번호가 어떻게 되세요?\";\n      case 4:\n        return \"어디 사세요?\";\n      default:\n        return \"\";\n    }\n  };\n\n  // 나이 선택을 위한 버튼 그룹 컴포넌트\n  const AgeButtonGroup = ({\n    value,\n    onChange,\n    disabled\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hmk-age-buttons\",\n    children: ['50대', '60대', '70대', '80대', '90대 이상'].map(age => /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: `hmk-age-button ${value === age ? 'selected' : ''}`,\n      onClick: () => onChange('age', age),\n      disabled: disabled,\n      children: age\n    }, age, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 9\n  }, this);\n\n  // 각 섹션 컴포넌트\n  const Section = ({\n    step,\n    question,\n    field,\n    value,\n    onChange,\n    onConfirm,\n    isCompleted\n  }) => {\n    _s();\n    const sectionRef = useRef(null);\n    const [isListening, setIsListening] = useState(false);\n    useEffect(() => {\n      sectionsRef.current[step] = sectionRef.current;\n    }, [step]);\n    const handleVoiceInput = async () => {\n      if (isProcessing) return;\n      try {\n        setIsListening(true);\n\n        // 주소 필드인 경우\n        if (field === 'address') {\n          await startListening('address');\n        } else {\n          await startListening(field);\n        }\n      } catch (error) {\n        console.error('음성 입력 오류:', error);\n      } finally {\n        setIsListening(false);\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: sectionRef,\n      className: `hmk-sequence-section ${isCompleted ? 'completed' : ''} ${currentStep === step ? 'active' : ''}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hmk-sequence-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"hmk-sequence-question\",\n          children: question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }, this), field === 'age' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hmk-input-container\",\n          children: /*#__PURE__*/_jsxDEV(AgeButtonGroup, {\n            value: value,\n            onChange: onChange,\n            disabled: isCompleted\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hmk-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: field === 'phone' ? 'tel' : 'text',\n            className: \"hmk-sequence-input\",\n            value: value,\n            onChange: e => onChange(field, e.target.value),\n            disabled: isCompleted,\n            placeholder: field === 'phone' ? '전화번호를 말씀해주세요' : field === 'address' ? '주소를 말씀해주세요' : '말씀해주세요'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `hmk-voice-button ${isListening ? 'listening' : ''}`,\n            onClick: handleVoiceInput,\n            disabled: isCompleted || isProcessing,\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faMicrophone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 25\n        }, this), !isCompleted && value && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"hmk-confirm-button\",\n          onClick: () => onConfirm(step),\n          children: \"\\uD655\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }, this);\n  };\n\n  // 컴포넌트 마운트 시 로컬 스토리지 초기화\n  _s(Section, \"g9zDcuTsvn+lrdSpk22q87KiVpM=\");\n  useEffect(() => {\n    // 로컬 스토리지 초기화\n    localStorage.removeItem('resumeFormData');\n\n    // 첫 번째 질문 읽기\n    const firstQuestion = getQuestionForStep(1);\n    if (firstQuestion) {\n      speak(firstQuestion);\n    }\n\n    // 컴포넌트 언마운트 시에도 로컬 스토리지 초기화\n    return () => {\n      localStorage.removeItem('resumeFormData');\n    };\n  }, []); // 빈 배열을 넣어 마운트/언마운트 시에만 실행\n\n  const handleVoiceInput = async () => {\n    try {\n      setIsProcessing(true);\n\n      // 1. 음성 녹음 시작\n      await startRecording();\n\n      // 2. 5초 동안 침묵 감지 시작\n      checkSilence(async audioBlob => {\n        if (!audioBlob) return;\n        try {\n          // 3. STT 변환\n          const sttText = await voiceService.speechToText(audioBlob);\n          console.log(\"STT 결과:\", sttText);\n\n          // 4. 주소 매칭\n          const matchResult = await voiceService.matchAddress(sttText);\n          console.log(\"매칭 결과:\", matchResult);\n\n          // 5. 주소 설정\n          if (matchResult.matched_address) {\n            const addr = matchResult.matched_address;\n            const fullAddress = `${addr.city} ${addr.district} ${addr.town} ${addr.road_name} ${addr.building_main_num}${addr.building_sub_num ? '-' + addr.building_sub_num : ''}`;\n            setFormData(prev => ({\n              ...prev,\n              address: fullAddress\n            }));\n          }\n        } catch (error) {\n          console.error('주소 처리 중 오류:', error);\n        } finally {\n          setIsProcessing(false);\n        }\n      }, 5000); // 5초 침묵 감지\n    } catch (error) {\n      console.error('음성 입력 중 오류:', error);\n      setIsProcessing(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hmk-sequence-container\",\n    onSubmit: e => e.preventDefault(),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hmk-sequence-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"hmk-back-button\",\n        onClick: () => navigate(-1),\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faArrowLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hmk-progress-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hmk-progress-track\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hmk-progress-fill\",\n            style: {\n              width: `${completedSteps.length / 10 * 100}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"hmk-progress-step\",\n          children: [completedSteps.length, \"/10\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hmk-sections-container\",\n      children: [/*#__PURE__*/_jsxDEV(Section, {\n        step: 1,\n        question: \"\\uC774\\uB984\\uC774 \\uC5B4\\uB5BB\\uAC8C \\uB418\\uC138\\uC694?\",\n        field: \"name\",\n        value: formData.name,\n        onChange: (field, value) => setFormData(prev => ({\n          ...prev,\n          [field]: value\n        })),\n        onConfirm: handleConfirm,\n        isCompleted: completedSteps.includes(1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 17\n      }, this), completedSteps.includes(1) && /*#__PURE__*/_jsxDEV(Section, {\n        step: 2,\n        question: \"\\uB098\\uC774\\uAC00 \\uC5B4\\uB5BB\\uAC8C \\uB418\\uC138\\uC694?\",\n        field: \"age\",\n        value: formData.age,\n        onChange: (field, value) => setFormData(prev => ({\n          ...prev,\n          [field]: value\n        })),\n        onConfirm: handleConfirm,\n        isCompleted: completedSteps.includes(2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 21\n      }, this), completedSteps.includes(2) && /*#__PURE__*/_jsxDEV(Section, {\n        step: 3,\n        question: \"\\uC804\\uD654\\uBC88\\uD638\\uAC00 \\uC5B4\\uB5BB\\uAC8C \\uB418\\uC138\\uC694?\",\n        field: \"phone\",\n        value: formData.phone,\n        onChange: (field, value) => setFormData(prev => ({\n          ...prev,\n          [field]: value\n        })),\n        onConfirm: handleConfirm,\n        isCompleted: completedSteps.includes(3)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 21\n      }, this), completedSteps.includes(3) && /*#__PURE__*/_jsxDEV(Section, {\n        step: 4,\n        question: \"\\uC5B4\\uB514 \\uC0AC\\uC138\\uC694?\",\n        field: \"address\",\n        value: formData.address,\n        onChange: (field, value) => setFormData(prev => ({\n          ...prev,\n          [field]: value\n        })),\n        onConfirm: handleConfirm,\n        isCompleted: completedSteps.includes(4)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 13\n    }, this), isAllCompleted && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hmk-sequence-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"hmk-submit-button\",\n        onClick: handleSubmit,\n        children: \"\\uC81C\\uCD9C\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 344,\n    columnNumber: 9\n  }, this);\n};\n_s2(ResumeSequence, \"GByRXLZgv7o6SQlQXZe2O7NZfEY=\", false, function () {\n  return [useNavigate, useVoiceRecording];\n});\n_c = ResumeSequence;\nexport default ResumeSequence;\nvar _c;\n$RefreshReg$(_c, \"ResumeSequence\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","FontAwesomeIcon","faMicrophone","faArrowLeft","faCheck","faArrowDown","voiceService","useVoiceRecording","axios","jsxDEV","_jsxDEV","ResumeSequence","_s2","_s","$RefreshSig$","navigate","currentStep","setCurrentStep","formData","setFormData","savedData","localStorage","getItem","JSON","parse","name","age","phone","address","isListening","setIsListening","completedSteps","setCompletedSteps","inputRef","sectionsRef","isRecording","error","startRecording","checkSilence","audioBlob","setAudioBlob","isProcessing","setIsProcessing","setItem","stringify","isAllCompleted","length","handleSubmit","response","post","data","success","removeItem","console","speak","text","log","audioUrl","textToSpeech","fullUrl","Promise","resolve","audio","Audio","onended","play","catch","startListening","field","handleVoiceInput","recordingTime","silenceThreshold","stream","navigator","mediaDevices","getUserMedia","mediaRecorder","MediaRecorder","audioChunks","reject","ondataavailable","event","push","onstop","Blob","type","speechToText","prev","start","setTimeout","state","stop","lastAudioTime","Date","now","silenceCheck","setInterval","clearInterval","handleConfirm","step","includes","nextSection","current","scrollIntoView","behavior","block","nextQuestion","getQuestionForStep","AgeButtonGroup","value","onChange","disabled","className","children","map","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Section","question","onConfirm","isCompleted","sectionRef","ref","e","target","placeholder","icon","firstQuestion","sttText","matchResult","matchAddress","matched_address","addr","fullAddress","city","district","town","road_name","building_main_num","building_sub_num","onSubmit","preventDefault","style","width","_c","$RefreshReg$"],"sources":["D:/dev/finalproj/react_finalproj/client/src/components/forms/ResumeSequence.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMicrophone, faArrowLeft, faCheck, faArrowDown } from '@fortawesome/free-solid-svg-icons';\r\nimport '../../assets/css/resumeSequence.css';\r\nimport { voiceService } from '../../api/voiceService';\r\nimport { useVoiceRecording } from '../../hooks/useVoiceRecording';\r\nimport axios from 'axios';\r\n\r\nconst ResumeSequence = () => {\r\n    const navigate = useNavigate();\r\n    const [currentStep, setCurrentStep] = useState(1);\r\n    const [formData, setFormData] = useState(() => {\r\n        // 로컬 스토리지에서 기존 데이터 불러오기\r\n        const savedData = localStorage.getItem('resumeFormData');\r\n        return savedData ? JSON.parse(savedData) : {\r\n            name: '',\r\n            age: '',\r\n            phone: '',\r\n            address: '',\r\n        };\r\n    });\r\n    const [isListening, setIsListening] = useState(false);\r\n    const [completedSteps, setCompletedSteps] = useState([]);\r\n    const inputRef = useRef(null);\r\n    const sectionsRef = useRef([]);\r\n    const { isRecording, error, startRecording, checkSilence } = useVoiceRecording();\r\n    const [audioBlob, setAudioBlob] = useState(null);\r\n    const [isProcessing, setIsProcessing] = useState(false);\r\n\r\n    // 폼 데이터가 변경될 때마다 로컬 스토리지에 저장\r\n    useEffect(() => {\r\n        localStorage.setItem('resumeFormData', JSON.stringify(formData));\r\n    }, [formData]);\r\n\r\n    // 모든 단계가 완료되었는지 확인\r\n    const isAllCompleted = completedSteps.length === 4;\r\n\r\n    // 폼 제출 처리\r\n    const handleSubmit = async () => {\r\n        try {\r\n            // 서버로 데이터 전송\r\n            const response = await axios.post('http://localhost:8000/api/resume', formData);\r\n            if (response.data.success) {\r\n                // 성공 시 로컬 스토리지 클리어\r\n                localStorage.removeItem('resumeFormData');\r\n                // 다음 페이지로 이동\r\n                navigate('/success');\r\n            }\r\n        } catch (error) {\r\n            console.error('폼 제출 중 오류:', error);\r\n        }\r\n    };\r\n\r\n    // TTS 기능 - 질문하기\r\n    const speak = async (text) => {\r\n        try {\r\n            console.log('TTS 요청 시작:', text);\r\n            const audioUrl = await voiceService.textToSpeech(text);\r\n            const fullUrl = `http://localhost:8000${audioUrl}`;\r\n            \r\n            // 오디오 재생이 완료될 때까지 대기\r\n            return new Promise((resolve) => {\r\n                const audio = new Audio(fullUrl);\r\n                audio.onended = () => resolve();  // 재생 완료 시 Promise 해결\r\n                audio.play().catch(error => {\r\n                    console.error('오디오 재생 중 오류:', error);\r\n                    resolve();  // 에러 발생해도 진행\r\n                });\r\n            });\r\n        } catch (error) {\r\n            console.error('TTS 실행 중 오류 발생:', error);\r\n        }\r\n    };\r\n\r\n    // STT 기능 - 답변 받기\r\n    const startListening = async (field) => {\r\n        if (isProcessing) return;\r\n        \r\n        try {\r\n            setIsProcessing(true);\r\n            setIsListening(true);\r\n\r\n            // 주소 필드인 경우 handleVoiceInput 사용\r\n            if (field === 'address') {\r\n                await handleVoiceInput();\r\n                return;\r\n            }\r\n\r\n            // 전화번호 필드인 경우 더 긴 녹음 시간과 침묵 감지 시간 사용\r\n            const recordingTime = field === 'phone' ? 15000 : 5000;  // 전화번호는 15초\r\n            const silenceThreshold = field === 'phone' ? 8000 : 5000;  // 전화번호는 8초 침묵\r\n\r\n            // 다른 필드들은 기존 로직 사용\r\n            const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n            const mediaRecorder = new MediaRecorder(stream);\r\n            const audioChunks = [];\r\n\r\n            return new Promise((resolve, reject) => {\r\n                mediaRecorder.ondataavailable = (event) => {\r\n                    audioChunks.push(event.data);\r\n                };\r\n\r\n                mediaRecorder.onstop = async () => {\r\n                    const audioBlob = new Blob(audioChunks, { type: 'audio/webm' });\r\n                    try {\r\n                        const text = await voiceService.speechToText(audioBlob);\r\n                        setFormData(prev => ({...prev, [field]: text}));\r\n                        resolve();\r\n                    } catch (error) {\r\n                        console.error('음성 인식 오류:', error);\r\n                        reject(error);\r\n                    } finally {\r\n                        setIsListening(false);\r\n                        setIsProcessing(false);\r\n                    }\r\n                };\r\n\r\n                mediaRecorder.start();\r\n\r\n                // 녹음 중지 타이머\r\n                setTimeout(() => {\r\n                    if (mediaRecorder.state === 'recording') {\r\n                        mediaRecorder.stop();\r\n                    }\r\n                }, recordingTime);\r\n\r\n                // 침묵 감지 로직 추가\r\n                let lastAudioTime = Date.now();\r\n                const silenceCheck = setInterval(() => {\r\n                    if (audioChunks.length > 0 && Date.now() - lastAudioTime > silenceThreshold) {\r\n                        clearInterval(silenceCheck);\r\n                        if (mediaRecorder.state === 'recording') {\r\n                            mediaRecorder.stop();\r\n                        }\r\n                    }\r\n                    if (audioChunks.length > 0) {\r\n                        lastAudioTime = Date.now();\r\n                    }\r\n                }, 1000);\r\n            });\r\n\r\n        } catch (error) {\r\n            console.error('음성 입력 오류:', error);\r\n            setIsListening(false);\r\n            setIsProcessing(false);\r\n        }\r\n    };\r\n\r\n    // 단계 진행 처리\r\n    const handleConfirm = async (step) => {\r\n        if (!completedSteps.includes(step)) {\r\n            setCompletedSteps(prev => [...prev, step]);\r\n            setCurrentStep(step + 1);\r\n            \r\n            // 다음 섹션으로 스크롤\r\n            setTimeout(() => {\r\n                const nextSection = sectionsRef.current[step];\r\n                if (nextSection) {\r\n                    nextSection.scrollIntoView({ \r\n                        behavior: 'smooth',\r\n                        block: 'start'\r\n                    });\r\n                }\r\n            }, 100);\r\n\r\n            // 다음 질문 읽어주기\r\n            const nextQuestion = getQuestionForStep(step + 1);\r\n            if (nextQuestion) {\r\n                await speak(nextQuestion);  // 질문이 끝날 때까지 대기\r\n            }\r\n        }\r\n    };\r\n\r\n    // 질문 텍스트 가져오기\r\n    const getQuestionForStep = (step) => {\r\n        switch (step) {\r\n            case 1:\r\n                return \"이름이 어떻게 되세요?\";\r\n            case 2:\r\n                return \"나이가 어떻게 되세요?\";\r\n            case 3:\r\n                return \"전화번호가 어떻게 되세요?\";\r\n            case 4:\r\n                return \"어디 사세요?\";\r\n            default:\r\n                return \"\";\r\n        }\r\n    };\r\n\r\n    // 나이 선택을 위한 버튼 그룹 컴포넌트\r\n    const AgeButtonGroup = ({ value, onChange, disabled }) => (\r\n        <div className=\"hmk-age-buttons\">\r\n            {['50대', '60대', '70대', '80대', '90대 이상'].map((age) => (\r\n                <button\r\n                    key={age}\r\n                    type=\"button\"\r\n                    className={`hmk-age-button ${value === age ? 'selected' : ''}`}\r\n                    onClick={() => onChange('age', age)}\r\n                    disabled={disabled}\r\n                >\r\n                    {age}\r\n                </button>\r\n            ))}\r\n        </div>\r\n    );\r\n\r\n    // 각 섹션 컴포넌트\r\n    const Section = ({ step, question, field, value, onChange, onConfirm, isCompleted }) => {\r\n        const sectionRef = useRef(null);\r\n        const [isListening, setIsListening] = useState(false);\r\n\r\n        useEffect(() => {\r\n            sectionsRef.current[step] = sectionRef.current;\r\n        }, [step]);\r\n\r\n        const handleVoiceInput = async () => {\r\n            if (isProcessing) return;\r\n            \r\n            try {\r\n                setIsListening(true);\r\n                \r\n                // 주소 필드인 경우\r\n                if (field === 'address') {\r\n                    await startListening('address');\r\n                } else {\r\n                    await startListening(field);\r\n                }\r\n                \r\n            } catch (error) {\r\n                console.error('음성 입력 오류:', error);\r\n            } finally {\r\n                setIsListening(false);\r\n            }\r\n        };\r\n\r\n        return (\r\n            <div \r\n                ref={sectionRef}\r\n                className={`hmk-sequence-section ${isCompleted ? 'completed' : ''} ${currentStep === step ? 'active' : ''}`}\r\n            >\r\n                <div className=\"hmk-sequence-content\">\r\n                    <h2 className=\"hmk-sequence-question\">\r\n                        {question}\r\n                    </h2>\r\n                    {field === 'age' ? (\r\n                        <div className=\"hmk-input-container\">\r\n                            <AgeButtonGroup \r\n                                value={value}\r\n                                onChange={onChange}\r\n                                disabled={isCompleted}\r\n                            />\r\n                        </div>\r\n                    ) : (\r\n                        <div className=\"hmk-input-container\">\r\n                            <input\r\n                                type={field === 'phone' ? 'tel' : 'text'}\r\n                                className=\"hmk-sequence-input\"\r\n                                value={value}\r\n                                onChange={(e) => onChange(field, e.target.value)}\r\n                                disabled={isCompleted}\r\n                                placeholder={field === 'phone' ? '전화번호를 말씀해주세요' : \r\n                                           field === 'address' ? '주소를 말씀해주세요' : '말씀해주세요'}\r\n                            />\r\n                            <button \r\n                                className={`hmk-voice-button ${isListening ? 'listening' : ''}`}\r\n                                onClick={handleVoiceInput}\r\n                                disabled={isCompleted || isProcessing}\r\n                            >\r\n                                <FontAwesomeIcon icon={faMicrophone} />\r\n                            </button>\r\n                        </div>\r\n                    )}\r\n                    {!isCompleted && value && (\r\n                        <button \r\n                            className=\"hmk-confirm-button\"\r\n                            onClick={() => onConfirm(step)}\r\n                        >\r\n                            확인\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    // 컴포넌트 마운트 시 로컬 스토리지 초기화\r\n    useEffect(() => {\r\n        // 로컬 스토리지 초기화\r\n        localStorage.removeItem('resumeFormData');\r\n        \r\n        // 첫 번째 질문 읽기\r\n        const firstQuestion = getQuestionForStep(1);\r\n        if (firstQuestion) {\r\n            speak(firstQuestion);\r\n        }\r\n        \r\n        // 컴포넌트 언마운트 시에도 로컬 스토리지 초기화\r\n        return () => {\r\n            localStorage.removeItem('resumeFormData');\r\n        };\r\n    }, []);  // 빈 배열을 넣어 마운트/언마운트 시에만 실행\r\n\r\n    const handleVoiceInput = async () => {\r\n        try {\r\n            setIsProcessing(true);\r\n            \r\n            // 1. 음성 녹음 시작\r\n            await startRecording();\r\n            \r\n            // 2. 5초 동안 침묵 감지 시작\r\n            checkSilence(async (audioBlob) => {\r\n                if (!audioBlob) return;\r\n                \r\n                try {\r\n                    // 3. STT 변환\r\n                    const sttText = await voiceService.speechToText(audioBlob);\r\n                    console.log(\"STT 결과:\", sttText);\r\n                    \r\n                    // 4. 주소 매칭\r\n                    const matchResult = await voiceService.matchAddress(sttText);\r\n                    console.log(\"매칭 결과:\", matchResult);\r\n                    \r\n                    // 5. 주소 설정\r\n                    if (matchResult.matched_address) {\r\n                        const addr = matchResult.matched_address;\r\n                        const fullAddress = `${addr.city} ${addr.district} ${addr.town} ${addr.road_name} ${addr.building_main_num}${addr.building_sub_num ? '-'+addr.building_sub_num : ''}`;\r\n                        setFormData(prev => ({...prev, address: fullAddress}));\r\n                    }\r\n                } catch (error) {\r\n                    console.error('주소 처리 중 오류:', error);\r\n                } finally {\r\n                    setIsProcessing(false);\r\n                }\r\n            }, 5000); // 5초 침묵 감지\r\n            \r\n        } catch (error) {\r\n            console.error('음성 입력 중 오류:', error);\r\n            setIsProcessing(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div \r\n            className=\"hmk-sequence-container\"\r\n            onSubmit={e => e.preventDefault()}\r\n        >\r\n            <div className=\"hmk-sequence-header\">\r\n                <button \r\n                    className=\"hmk-back-button\"\r\n                    onClick={() => navigate(-1)}\r\n                >\r\n                    <FontAwesomeIcon icon={faArrowLeft} />\r\n                </button>\r\n                <div className=\"hmk-progress-bar\">\r\n                    <div className=\"hmk-progress-track\">\r\n                        <div \r\n                            className=\"hmk-progress-fill\"\r\n                            style={{ width: `${(completedSteps.length / 10) * 100}%` }}\r\n                        ></div>\r\n                    </div>\r\n                    <span className=\"hmk-progress-step\">{completedSteps.length}/10</span>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"hmk-sections-container\">\r\n                <Section \r\n                    step={1}\r\n                    question=\"이름이 어떻게 되세요?\"\r\n                    field=\"name\"\r\n                    value={formData.name}\r\n                    onChange={(field, value) => setFormData(prev => ({...prev, [field]: value}))}\r\n                    onConfirm={handleConfirm}\r\n                    isCompleted={completedSteps.includes(1)}\r\n                />\r\n                {completedSteps.includes(1) && (\r\n                    <Section \r\n                        step={2}\r\n                        question=\"나이가 어떻게 되세요?\"\r\n                        field=\"age\"\r\n                        value={formData.age}\r\n                        onChange={(field, value) => setFormData(prev => ({...prev, [field]: value}))}\r\n                        onConfirm={handleConfirm}\r\n                        isCompleted={completedSteps.includes(2)}\r\n                    />\r\n                )}\r\n                {completedSteps.includes(2) && (\r\n                    <Section \r\n                        step={3}\r\n                        question=\"전화번호가 어떻게 되세요?\"\r\n                        field=\"phone\"\r\n                        value={formData.phone}\r\n                        onChange={(field, value) => setFormData(prev => ({...prev, [field]: value}))}\r\n                        onConfirm={handleConfirm}\r\n                        isCompleted={completedSteps.includes(3)}\r\n                    />\r\n                )}\r\n                {completedSteps.includes(3) && (\r\n                    <Section \r\n                        step={4}\r\n                        question=\"어디 사세요?\"\r\n                        field=\"address\"\r\n                        value={formData.address}\r\n                        onChange={(field, value) => setFormData(prev => ({...prev, [field]: value}))}\r\n                        onConfirm={handleConfirm}\r\n                        isCompleted={completedSteps.includes(4)}\r\n                    />\r\n                )}\r\n            </div>\r\n\r\n            {/* 모든 단계가 완료되면 제출 버튼 표시 */}\r\n            {isAllCompleted && (\r\n                <div className=\"hmk-sequence-footer\">\r\n                    <button \r\n                        className=\"hmk-submit-button\"\r\n                        onClick={handleSubmit}\r\n                    >\r\n                        제출하기\r\n                    </button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ResumeSequence; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}