{"ast":null,"code":"var _jsxFileName = \"D:\\\\dev\\\\finalproj\\\\react_finalproj\\\\src\\\\components\\\\ResumeTemplate.jsx\",\n  _s = $RefreshSig$();\nimport { PDFDocument, rgb, StandardFonts } from 'pdf-lib';\nimport { Document, Page, pdfjs } from 'react-pdf';\nimport { useState } from 'react';\n\n// pdf.js 워커 설정\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\nconst ResumeTemplate = ({\n  formData\n}) => {\n  _s();\n  const [pdfUrl, setPdfUrl] = useState(null);\n  const fillPdfForm = async () => {\n    try {\n      const formUrl = '/seniorjobhelper.pdf';\n      const formPdfBytes = await fetch(formUrl).then(res => res.arrayBuffer());\n      const pdfDoc = await PDFDocument.load(formPdfBytes);\n      const page = pdfDoc.getPages()[0];\n\n      // 폰트 설정\n      const font = await pdfDoc.embedFont(StandardFonts.Helvetica);\n\n      // 기본 텍스트 스타일\n      const textOptions = {\n        font,\n        size: 12,\n        color: rgb(0, 0, 0)\n      };\n\n      // 기본 정보\n      page.drawText(formData.name, {\n        x: 120,\n        y: 720,\n        ...textOptions\n      });\n      page.drawText(`${formData.residentNumber1}-${formData.residentNumber2}`, {\n        x: 120,\n        y: 700,\n        ...textOptions\n      });\n      page.drawText(formData.address, {\n        x: 120,\n        y: 680,\n        ...textOptions\n      });\n      page.drawText(formData.mobilePhone, {\n        x: 400,\n        y: 720,\n        ...textOptions\n      });\n\n      // 최종학력\n      const educationY = 620;\n      const educationPositions = {\n        '무학': 100,\n        '초졸': 180,\n        '중졸': 260,\n        '고졸': 340,\n        '전문대졸': 420,\n        '대졸이상': 500\n      };\n      if (formData.education) {\n        page.drawText('■', {\n          x: educationPositions[formData.education],\n          y: educationY,\n          ...textOptions\n        });\n      }\n\n      // 세대구성 형태\n      const householdY = 580;\n      const householdPositions = {\n        '독신': 100,\n        '가족동거(노부모,손자녀,장애인)': 200,\n        '노인부부': 300,\n        '가족동거(경제능력가족)': 400,\n        '기타': 500\n      };\n      if (formData.householdType) {\n        page.drawText('■', {\n          x: householdPositions[formData.householdType],\n          y: householdY,\n          ...textOptions\n        });\n      }\n\n      // 동거가족 정보\n      const familyCount = (formData.spouse ? 1 : 0) + (formData.childrenCount || 0) + (formData.grandchildrenCount || 0);\n      if (familyCount > 0) {\n        page.drawText(`${familyCount}명`, {\n          x: 120,\n          y: 540,\n          ...textOptions\n        });\n        page.drawText(`(배우자: ${formData.spouse ? '1' : '0'}, 자녀: ${formData.childrenCount || '0'}, 손: ${formData.grandchildrenCount || '0'})`, {\n          x: 180,\n          y: 540,\n          ...textOptions\n        });\n      }\n\n      // 일자리사업 참여경력\n      const workExpY = 500;\n      if (!formData.workExperience.isNew) {\n        page.drawText('■', {\n          x: 100,\n          y: workExpY,\n          ...textOptions\n        }); // 금년도 신규참여\n      } else {\n        formData.workExperience.years.forEach(year => {\n          const yearX = 180 + formData.workExperience.years.indexOf(year) * 80;\n          page.drawText('■', {\n            x: yearX,\n            y: workExpY,\n            ...textOptions\n          });\n        });\n      }\n\n      // 건강상태\n      const healthY = 460;\n      const healthPositions = {\n        '매우건강': 100,\n        '건강': 180,\n        '보통': 260,\n        '나쁨': 340,\n        '매우나쁨': 420\n      };\n      if (formData.healthStatus) {\n        page.drawText('■', {\n          x: healthPositions[formData.healthStatus],\n          y: healthY,\n          ...textOptions\n        });\n      }\n\n      // 희망 직종\n      if (formData.desiredPrograms.first) {\n        page.drawText(formData.desiredPrograms.first, {\n          x: 120,\n          y: 420,\n          ...textOptions\n        });\n      }\n      if (formData.desiredPrograms.second) {\n        page.drawText(formData.desiredPrograms.second, {\n          x: 120,\n          y: 400,\n          ...textOptions\n        });\n      }\n      if (formData.desiredPrograms.third) {\n        page.drawText(formData.desiredPrograms.third, {\n          x: 120,\n          y: 380,\n          ...textOptions\n        });\n      }\n\n      // 건강보험 직장가입자 여부\n      const insuranceY = 340;\n      if (formData.volunteerWork.healthInsurance === 'true') {\n        page.drawText('■', {\n          x: 100,\n          y: insuranceY,\n          ...textOptions\n        }); // 해당\n      } else {\n        page.drawText('■', {\n          x: 200,\n          y: insuranceY,\n          ...textOptions\n        }); // 비해당\n      }\n\n      // 신청 동기\n      if (formData.applicationMotives.length > 0) {\n        const motivesY = 300;\n        formData.applicationMotives.forEach((motive, index) => {\n          page.drawText('■', {\n            x: 100 + index * 80,\n            y: motivesY,\n            ...textOptions\n          });\n        });\n      }\n      const pdfBytes = await pdfDoc.save();\n      const blob = new Blob([pdfBytes], {\n        type: 'application/pdf'\n      });\n      const url = window.URL.createObjectURL(blob);\n\n      // PDF URL 상태 업데이트\n      setPdfUrl(url);\n    } catch (error) {\n      console.error('PDF 생성 중 오류 발생:', error);\n      alert('PDF 생성 중 오류가 발생했습니다.');\n    }\n  };\n  const handleDownload = () => {\n    if (pdfUrl) {\n      const link = document.createElement('a');\n      link.href = pdfUrl;\n      link.download = `${formData.name}_노인일자리신청서.pdf`;\n      link.click();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pdf-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fillPdfForm,\n      className: \"hmk-button hmk-preview-button\",\n      children: \"\\uC2E0\\uCCAD\\uC11C \\uBBF8\\uB9AC\\uBCF4\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), pdfUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pdf-viewer\",\n      children: [/*#__PURE__*/_jsxDEV(Document, {\n        file: pdfUrl,\n        children: /*#__PURE__*/_jsxDEV(Page, {\n          pageNumber: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDownload,\n        className: \"hmk-button hmk-download-button\",\n        children: \"PDF \\uB2E4\\uC6B4\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n};\n_s(ResumeTemplate, \"88RKqrlqdjaMuC5FCrS0b8qtccw=\");\n_c = ResumeTemplate;\nexport default ResumeTemplate;\nvar _c;\n$RefreshReg$(_c, \"ResumeTemplate\");","map":{"version":3,"names":["PDFDocument","rgb","StandardFonts","Document","Page","pdfjs","useState","jsxDEV","_jsxDEV","GlobalWorkerOptions","workerSrc","version","ResumeTemplate","formData","_s","pdfUrl","setPdfUrl","fillPdfForm","formUrl","formPdfBytes","fetch","then","res","arrayBuffer","pdfDoc","load","page","getPages","font","embedFont","Helvetica","textOptions","size","color","drawText","name","x","y","residentNumber1","residentNumber2","address","mobilePhone","educationY","educationPositions","education","householdY","householdPositions","householdType","familyCount","spouse","childrenCount","grandchildrenCount","workExpY","workExperience","isNew","years","forEach","year","yearX","indexOf","healthY","healthPositions","healthStatus","desiredPrograms","first","second","third","insuranceY","volunteerWork","healthInsurance","applicationMotives","length","motivesY","motive","index","pdfBytes","save","blob","Blob","type","url","window","URL","createObjectURL","error","console","alert","handleDownload","link","document","createElement","href","download","click","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","file","pageNumber","_c","$RefreshReg$"],"sources":["D:/dev/finalproj/react_finalproj/src/components/ResumeTemplate.jsx"],"sourcesContent":["import { PDFDocument, rgb, StandardFonts } from 'pdf-lib';\r\nimport { Document, Page, pdfjs } from 'react-pdf';\r\nimport { useState } from 'react';\r\n\r\n// pdf.js 워커 설정\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\n\r\nconst ResumeTemplate = ({ formData }) => {\r\n  const [pdfUrl, setPdfUrl] = useState(null);\r\n\r\n  const fillPdfForm = async () => {\r\n    try {\r\n      const formUrl = '/seniorjobhelper.pdf';\r\n      const formPdfBytes = await fetch(formUrl).then(res => res.arrayBuffer());\r\n      \r\n      const pdfDoc = await PDFDocument.load(formPdfBytes);\r\n      const page = pdfDoc.getPages()[0];\r\n      \r\n      // 폰트 설정\r\n      const font = await pdfDoc.embedFont(StandardFonts.Helvetica);\r\n      \r\n      // 기본 텍스트 스타일\r\n      const textOptions = {\r\n        font,\r\n        size: 12,\r\n        color: rgb(0, 0, 0)\r\n      };\r\n\r\n      // 기본 정보\r\n      page.drawText(formData.name, { x: 120, y: 720, ...textOptions });\r\n      page.drawText(`${formData.residentNumber1}-${formData.residentNumber2}`, { x: 120, y: 700, ...textOptions });\r\n      page.drawText(formData.address, { x: 120, y: 680, ...textOptions });\r\n      page.drawText(formData.mobilePhone, { x: 400, y: 720, ...textOptions });\r\n\r\n      // 최종학력\r\n      const educationY = 620;\r\n      const educationPositions = {\r\n        '무학': 100,\r\n        '초졸': 180,\r\n        '중졸': 260,\r\n        '고졸': 340,\r\n        '전문대졸': 420,\r\n        '대졸이상': 500\r\n      };\r\n      if (formData.education) {\r\n        page.drawText('■', { x: educationPositions[formData.education], y: educationY, ...textOptions });\r\n      }\r\n\r\n      // 세대구성 형태\r\n      const householdY = 580;\r\n      const householdPositions = {\r\n        '독신': 100,\r\n        '가족동거(노부모,손자녀,장애인)': 200,\r\n        '노인부부': 300,\r\n        '가족동거(경제능력가족)': 400,\r\n        '기타': 500\r\n      };\r\n      if (formData.householdType) {\r\n        page.drawText('■', { x: householdPositions[formData.householdType], y: householdY, ...textOptions });\r\n      }\r\n\r\n      // 동거가족 정보\r\n      const familyCount = (formData.spouse ? 1 : 0) + \r\n                         (formData.childrenCount || 0) + \r\n                         (formData.grandchildrenCount || 0);\r\n      if (familyCount > 0) {\r\n        page.drawText(`${familyCount}명`, { x: 120, y: 540, ...textOptions });\r\n        page.drawText(`(배우자: ${formData.spouse ? '1' : '0'}, 자녀: ${formData.childrenCount || '0'}, 손: ${formData.grandchildrenCount || '0'})`, \r\n          { x: 180, y: 540, ...textOptions });\r\n      }\r\n\r\n      // 일자리사업 참여경력\r\n      const workExpY = 500;\r\n      if (!formData.workExperience.isNew) {\r\n        page.drawText('■', { x: 100, y: workExpY, ...textOptions }); // 금년도 신규참여\r\n      } else {\r\n        formData.workExperience.years.forEach(year => {\r\n          const yearX = 180 + (formData.workExperience.years.indexOf(year) * 80);\r\n          page.drawText('■', { x: yearX, y: workExpY, ...textOptions });\r\n        });\r\n      }\r\n\r\n      // 건강상태\r\n      const healthY = 460;\r\n      const healthPositions = {\r\n        '매우건강': 100,\r\n        '건강': 180,\r\n        '보통': 260,\r\n        '나쁨': 340,\r\n        '매우나쁨': 420\r\n      };\r\n      if (formData.healthStatus) {\r\n        page.drawText('■', { x: healthPositions[formData.healthStatus], y: healthY, ...textOptions });\r\n      }\r\n\r\n      // 희망 직종\r\n      if (formData.desiredPrograms.first) {\r\n        page.drawText(formData.desiredPrograms.first, { x: 120, y: 420, ...textOptions });\r\n      }\r\n      if (formData.desiredPrograms.second) {\r\n        page.drawText(formData.desiredPrograms.second, { x: 120, y: 400, ...textOptions });\r\n      }\r\n      if (formData.desiredPrograms.third) {\r\n        page.drawText(formData.desiredPrograms.third, { x: 120, y: 380, ...textOptions });\r\n      }\r\n\r\n      // 건강보험 직장가입자 여부\r\n      const insuranceY = 340;\r\n      if (formData.volunteerWork.healthInsurance === 'true') {\r\n        page.drawText('■', { x: 100, y: insuranceY, ...textOptions }); // 해당\r\n      } else {\r\n        page.drawText('■', { x: 200, y: insuranceY, ...textOptions }); // 비해당\r\n      }\r\n\r\n      // 신청 동기\r\n      if (formData.applicationMotives.length > 0) {\r\n        const motivesY = 300;\r\n        formData.applicationMotives.forEach((motive, index) => {\r\n          page.drawText('■', { x: 100 + (index * 80), y: motivesY, ...textOptions });\r\n        });\r\n      }\r\n\r\n      const pdfBytes = await pdfDoc.save();\r\n      const blob = new Blob([pdfBytes], { type: 'application/pdf' });\r\n      const url = window.URL.createObjectURL(blob);\r\n      \r\n      // PDF URL 상태 업데이트\r\n      setPdfUrl(url);\r\n    } catch (error) {\r\n      console.error('PDF 생성 중 오류 발생:', error);\r\n      alert('PDF 생성 중 오류가 발생했습니다.');\r\n    }\r\n  };\r\n\r\n  const handleDownload = () => {\r\n    if (pdfUrl) {\r\n      const link = document.createElement('a');\r\n      link.href = pdfUrl;\r\n      link.download = `${formData.name}_노인일자리신청서.pdf`;\r\n      link.click();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"pdf-container\">\r\n      <button onClick={fillPdfForm} className=\"hmk-button hmk-preview-button\">\r\n        신청서 미리보기\r\n      </button>\r\n      \r\n      {pdfUrl && (\r\n        <div className=\"pdf-viewer\">\r\n          <Document file={pdfUrl}>\r\n            <Page pageNumber={1} />\r\n          </Document>\r\n          \r\n          <button onClick={handleDownload} className=\"hmk-button hmk-download-button\">\r\n            PDF 다운로드\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResumeTemplate; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}